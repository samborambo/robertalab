// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.nb');

goog.require('Blockly.Msg');

<<<<<<< HEAD
Blockly.Msg.ABOUT = "about";  // untranslated
=======
<<<<<<< HEAD
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.ACCELERATION_TOOLTIP = "Get the acceleration value in milli-gravitys.";
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";
Blockly.Msg.ACTION_LCD = "LCD";  // untranslated
Blockly.Msg.ACTION_LCDI2C = "LCD";  // untranslated
Blockly.Msg.ACTION_LED = "LED";  // untranslated
Blockly.Msg.ACTION_PLAY = "play";  // untranslated
Blockly.Msg.ACTION_RELAY = "relay";  // untranslated
Blockly.Msg.ACTION_RGBLED = "RGB LED";  // untranslated
Blockly.Msg.ACTION_SERVO = "servo motor";  // untranslated
Blockly.Msg.ACTION_STEPMOTOR = "step motor";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "Marker for an additional activity.";
Blockly.Msg.ACTOR_TOOLTIP = "Represents any actor.";
Blockly.Msg.ADD_COMMENT = "Legg til kommentar";
Blockly.Msg.ANALOG = "analog";
Blockly.Msg.AND = "and";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Represents the Bot\"n Roll board with connected actors and sensors. There are also inbuilt actors and sensors available, e.g. pushbuttons, display ...";
=======
Blockly.Msg.ACCELERATION_TOOLTIP = "Get the acceleration value in milli-gravitys.";  // untranslated
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "Marker for an additional activity.";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "Represents any actor.";  // untranslated
Blockly.Msg.ADD_COMMENT = "Legg til kommentar";
Blockly.Msg.ANALOG = "analog";  // untranslated
Blockly.Msg.AND = "and";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Represents the Bot'n Roll board with connected actors and sensors. There are also inbuilt actors and sensors available, e.g. pushbuttons, display ...";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.AUTH = "Vennligst godkjenn at denne appen gjør det mulig for deg å lagre arbeidet slik at du kan dele det.";
<<<<<<< HEAD
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";
Blockly.Msg.BLOCK_NOT_EXECUTED = "The exection of this block will have no effect!";
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Returns the previously stored number.";
Blockly.Msg.BOB3_RECALL_NUMBER = "recall number";
Blockly.Msg.BOB3_REMEMBER_NUMBER = "remember number";
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "The number to store should be an integer in the range of 0 to 255";
Blockly.Msg.BOTH = "both";
Blockly.Msg.BRICKLIGHT = "brick light";
Blockly.Msg.BRICKLIGHT_BLUE = "blue";
Blockly.Msg.BRICKLIGHT_COLOR = "colour";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "double flashing";
Blockly.Msg.BRICKLIGHT_FLASH = "flashing";
Blockly.Msg.BRICKLIGHT_GREEN = "green";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Turns bricklight off.";
Blockly.Msg.BRICKLIGHT_ON = "on";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Turns bricklight on.";
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";
Blockly.Msg.BRICKLIGHT_RED = "red";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Resets bricklight. Sets the default bricklight: green and blinking.";
Blockly.Msg.BRICK_IPADDRESS = "ip address";  // untranslated
Blockly.Msg.BRICK_PASSWORD = "password";  // untranslated
Blockly.Msg.BRICK_PORT = "port";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "track width";
Blockly.Msg.BRICK_USERNAME = "user name";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "wheel diameter";
Blockly.Msg.BRUSH_OFF = "Turn Brush Off";  // untranslated
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Turn the brush off.";  // untranslated
Blockly.Msg.BRUSH_ON = "Turn Brush On (RPM)";  // untranslated
Blockly.Msg.BRUSH_ON_TOOLTIP = "Turns on the brush with RPM of the motor (0<=RPM<=10000)";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Share";
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Upload »$« to the gallery";
Blockly.Msg.BUTTON_EMPTY_LIST = "Empty list";
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Represents Calliope, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";
Blockly.Msg.CENTER = "center";
=======
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";  // untranslated
Blockly.Msg.BLOCK_NOT_EXECUTED = "The exection of this block will have no effect!";  // untranslated
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Returns the previously stored number.";  // untranslated
Blockly.Msg.BOB3_RECALL_NUMBER = "recall number";  // untranslated
Blockly.Msg.BOB3_REMEMBER_NUMBER = "remember number";  // untranslated
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "The number to store should be an integer in the range of 0 to 255";  // untranslated
Blockly.Msg.BOTH = "both";  // untranslated
Blockly.Msg.BRICKLIGHT = "brick light";  // untranslated
Blockly.Msg.BRICKLIGHT_BLUE = "blue";  // untranslated
Blockly.Msg.BRICKLIGHT_COLOR = "colour";  // untranslated
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "double flashing";  // untranslated
Blockly.Msg.BRICKLIGHT_FLASH = "flashing";  // untranslated
Blockly.Msg.BRICKLIGHT_GREEN = "green";  // untranslated
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Turns bricklight off.";  // untranslated
Blockly.Msg.BRICKLIGHT_ON = "on";  // untranslated
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Turns bricklight on.";  // untranslated
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";  // untranslated
Blockly.Msg.BRICKLIGHT_RED = "red";  // untranslated
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Resets bricklight. Sets the default bricklight: green and blinking.";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "track width";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "wheel diameter";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Share";  // untranslated
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Upload »$« to the gallery";  // untranslated
Blockly.Msg.BUTTON_EMPTY_LIST = "Empty list";  // untranslated
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Represents Calliope, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.CENTER = "center";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.CHANGE_VALUE_TITLE = "Bytt verdi:";
Blockly.Msg.CHAT = "Chat med din medarbeider ved å skrive i dette feltet!";
Blockly.Msg.CLEAN_UP = "Rydd opp Blocks";
Blockly.Msg.COLLAPSE_ALL = "Skjul blokker";
Blockly.Msg.COLLAPSE_BLOCK = "Skjul blokk";
Blockly.Msg.COLON = "colon";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "farge 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "farge 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "forhold";
Blockly.Msg.COLOUR_BLEND_TITLE = "blande";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blander to farger sammen med et gitt forhold (0.0 - 1.0).";
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Velg en farge fra paletten.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "tilfeldig farge";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Velg en tilfeldig farge.";
Blockly.Msg.COLOUR_RGB_BLUE = "blå";
Blockly.Msg.COLOUR_RGB_GREEN = "grønn";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rød";
Blockly.Msg.COLOUR_RGB_TITLE = "farge med";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Lag en farge med angitt verdi av rød, grønn og blå. Alle verdier må være mellom 0 og 100.";
<<<<<<< HEAD
Blockly.Msg.COLOUR_RGB_WHITE = "white";
Blockly.Msg.COLOUR_TOOLTIP = "Represents a colour sensor.";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Calibrates the compass. Turn the compass sensor VERY slowly for two times (about 40 seconds).";  // untranslated
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";
Blockly.Msg.COMPASS_TOOLTIP = "Represents a compass sensor.";
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Represents a HiTechnic NXT compass sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "The direction of rotation of the left and right motor is different!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Left motor missing in the configuration!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Left motor is not regulated!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Motor is missing on the given port!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Right motor missing in the configuration!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Right motor is not regulated!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "You have multiple left motors assigned to your configuration!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "You have multiple right motors assigned to your configuration!";
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Other power consumer does not support this type of block!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "This sensor is not set to the port!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Connected wrong sensor to the given port!";
Blockly.Msg.CONFIGURATION_NO_PORT = "no port";  // untranslated
Blockly.Msg.CONFIGURATION_PORT = "Port1";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Click here to delete your robot configuration.";
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";
Blockly.Msg.CONNECTION_BOB3_RECEIVE_TOOLTIP = "Reads a message via the IR receiver. Only numbers can be received.";
Blockly.Msg.CONNECTION_BOB3_SEND_TOOLTIP = "Sends a message of type number to another Bob3. Hold the Bob3\"s face to face!";
Blockly.Msg.CONNECTION_CHECK = "connection to robot %1 active?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Check if the connection to the robot is active.";
Blockly.Msg.CONNECTION_CONNECT = "connect to robot name";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "from connection";
Blockly.Msg.CONNECTION_FROM_ROBOT = "from robot";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Reads a message over one of the channels (0 - 255). The default channel is 0.";
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Sends a message to another system. You can specify a signal strength from 0 - 7, where 0 is very low and 7 is the strongests. The message is send over channel 0 unless you specify another one.";
Blockly.Msg.CONNECTION_OVER_CHANNEL = "over channel";
Blockly.Msg.CONNECTION_POWER = "with strength";
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";
Blockly.Msg.CONNECTION_RECEIVED_DATA = "receive message";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Waits for a message from the robot which you declare in the connection.";
Blockly.Msg.CONNECTION_SEND_DATA = "send message";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Sends a message to another robot.";
Blockly.Msg.CONNECTION_SET_CHANNEL = "set channel to %1";
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Sets the channel for sending and receiving messages. Can be set from 0 to 255.";
Blockly.Msg.CONNECTION_START_TOOLTIP = "Tries to make a connection to another robot via Bluetooth.";
Blockly.Msg.CONNECTION_TOOLTIP = "A robot\"s connection";
Blockly.Msg.CONNECTION_TO_CONNECTION = "to connection";
Blockly.Msg.CONNECTION_TO_ROBOT = "to robot";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "wait for connection";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Waits for a connection via Bluetooth.";
=======
Blockly.Msg.COLOUR_RGB_WHITE = "white";  // untranslated
Blockly.Msg.COLOUR_TOOLTIP = "Represents a colour sensor.";  // untranslated
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Represents a compass sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "The direction of rotation of the left and right motor is different!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Left motor missing in the configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Left motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Motor is missing on the given port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Right motor missing in the configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Right motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "You have multiple left motors assigned to your configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "You have multiple right motors assigned to your configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "This sensor is not set to the port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Connected wrong sensor to the given port!";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Click here to delete your robot configuration.";  // untranslated
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.CONNECTION_BOB3_RECEIVE_TOOLTIP = "Reads a message via the IR receiver. Only numbers can be received.";  // untranslated
Blockly.Msg.CONNECTION_BOB3_SEND_TOOLTIP = "Sends a message of type number to another Bob3. Hold the Bob3's face to face!";  // untranslated
Blockly.Msg.CONNECTION_CHECK = "connection to robot %1 active?";  // untranslated
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Check if the connection to the robot is active.";  // untranslated
Blockly.Msg.CONNECTION_CONNECT = "connect to robot name";  // untranslated
Blockly.Msg.CONNECTION_FROM_CONNECTION = "from connection";  // untranslated
Blockly.Msg.CONNECTION_FROM_ROBOT = "from robot";  // untranslated
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Reads a message over one of the channels (0 - 255). The default channel is 0.";  // untranslated
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Sends a message to another system. You can specify a signal strength from 0 - 7, where 0 is very low and 7 is the strongests. The message is send over channel 0 unless you specify another one.";  // untranslated
Blockly.Msg.CONNECTION_OVER_CHANNEL = "over channel";  // untranslated
Blockly.Msg.CONNECTION_POWER = "with strength";  // untranslated
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";  // untranslated
Blockly.Msg.CONNECTION_RECEIVED_DATA = "receive message";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Waits for a message from the robot which you declare in the connection.";  // untranslated
Blockly.Msg.CONNECTION_SEND_DATA = "send message";  // untranslated
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Sends a message to another robot.";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL = "set channel to %1";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Sets the channel for sending and receiving messages. Can be set from 0 to 255.";  // untranslated
Blockly.Msg.CONNECTION_START_TOOLTIP = "Tries to make a connection to another robot via Bluetooth.";  // untranslated
Blockly.Msg.CONNECTION_TOOLTIP = "A robot's connection";  // untranslated
Blockly.Msg.CONNECTION_TO_CONNECTION = "to connection";  // untranslated
Blockly.Msg.CONNECTION_TO_ROBOT = "to robot";  // untranslated
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "wait for connection";  // untranslated
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Waits for a connection via Bluetooth.";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "bryt ut av løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "fortsett med neste gjentakelse av løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bryt ut av den gjeldende løkken.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Hopp over resten av denne løkken og fortsett med neste gjentakelse.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advarsel: Denne blokken kan kun brukes innenfor en løkke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for hvert element %1 i listen %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For hvert element i en liste, angi variabelen '%1' til elementet, og deretter lag noen setninger.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "tell med %1 fra %2 til %3 med %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Ha variabel \"%1\" ta verdiene fra start nummer til slutt nummer, telle med spesifisert intervall og lag de spesifiserte blokkene.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Legg til en betingelse til hvis blokken.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Legg til hva som skal skje hvis de andre ikke slår til.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Legg til, fjern eller flytt seksjoner i denne hvis-blokken.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "ellers";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "ellers hvis";
Blockly.Msg.CONTROLS_IF_MSG_IF = "hvis";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Hvis dette er sant, så gjør følgende.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Hvis dette er sant, så utfør den første blokken av instruksjoner. Hvis ikke, utfør den andre blokken.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Hvis det første stemmer, så utfør den første blokken av instruksjoner. Ellers, hvis det andre stemmer, utfør den andre blokken av instruksjoner.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Hvis den første verdien er sann, så utfør den første blokken med setninger. Ellers, hvis den andre verdien er sann, så utfør den andre blokken med setninger. Hvis ingen av verdiene er sanne, så utfør den siste blokken med setninger.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "gjør";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "gjenta %1 ganger";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Gjenta noen instruksjoner flere ganger.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "gjenta til";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "gjenta mens";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Så lenge et utsagn ikke stemmer, gjør noen instruksjoner.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Så lenge et utsagn stemmer, utfør noen instruksjoner.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Actualization date";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATIONS = "configurations";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Configuration name";  // untranslated
Blockly.Msg.DATATABLE_CREATED_BY = "Creator";  // untranslated
Blockly.Msg.DATATABLE_CREATED_ON = "Creation date";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "programs";  // untranslated
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Program name";  // untranslated
Blockly.Msg.DATATABLE_SHARED = "Shared";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Shared with";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Slett alle %1 blokker?";
Blockly.Msg.DELETE_BLOCK = "Slett blokk";
Blockly.Msg.DELETE_X_BLOCKS = "Slett %1 blokker";
Blockly.Msg.DIGITAL = "digital";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Deaktiver blokk";
<<<<<<< HEAD
Blockly.Msg.DISPLAY_ANIMATION = "animation";
Blockly.Msg.DISPLAY_CHARACTER = "character";
Blockly.Msg.DISPLAY_CLEAR = "clear display";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Clears the display.";
Blockly.Msg.DISPLAY_COL = "in column";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Returns the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Returns the brightness for this led. 0 means the led is turned off, 9 is the brightest value.";
Blockly.Msg.DISPLAY_IMAGE = "image";
Blockly.Msg.DISPLAY_PICTURE = "picture";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "eyes closed";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "eyes open";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "flowers";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "glasses";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "speedo";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Displays a picture on the screen.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "brightness";
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";
Blockly.Msg.DISPLAY_ROW = "in row";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Sets the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Sets the brightness for this led. 0 means the led is turned off, 9 is the brightest value. With x and y you can determine the position of the led you would like to change.";
Blockly.Msg.DISPLAY_SHOW = "show";
Blockly.Msg.DISPLAY_TEXT = "text";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Displays a text on the screen.";
Blockly.Msg.DROP_TOOLTIP = "Represents a drop sensor.";  // untranslated
=======
Blockly.Msg.DISPLAY_ANIMATION = "animation";  // untranslated
Blockly.Msg.DISPLAY_CHARACTER = "character";  // untranslated
Blockly.Msg.DISPLAY_CLEAR = "clear display";  // untranslated
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Clears the display.";  // untranslated
Blockly.Msg.DISPLAY_COL = "in column";  // untranslated
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Returns the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Returns the brightness for this led. 0 means the led is turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_IMAGE = "image";  // untranslated
Blockly.Msg.DISPLAY_PICTURE = "picture";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "eyes closed";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "eyes open";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "flowers";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "glasses";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_TACHO = "speedo";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Displays a picture on the screen.";  // untranslated
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "brightness";  // untranslated
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";  // untranslated
Blockly.Msg.DISPLAY_ROW = "in row";  // untranslated
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Sets the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Sets the brightness for this led. 0 means the led is turned off, 9 is the brightest value. With x and y you can determine the position of the led you would like to change.";  // untranslated
Blockly.Msg.DISPLAY_SHOW = "show";  // untranslated
Blockly.Msg.DISPLAY_TEXT = "text";  // untranslated
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Displays a text on the screen.";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.DUPLICATE_BLOCK = "duplikat";
Blockly.Msg.ENABLE_BLOCK = "Aktiver blokk";
<<<<<<< HEAD
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Resets the motor encoder.";
Blockly.Msg.ENCODER_TOOLTIP = "Represents an encoder.";  // untranslated
Blockly.Msg.ERROR_MISSING_PARAMETER = "An input value is missing!";  // untranslated
Blockly.Msg.ERROR_MISSING_RETURN = "The function return value is missing!";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "Represents the EV3 brick with connected actors and sensors. There are also inbuilt actors and sensors available, e.g. buttons, display ...";
=======
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Resets the motor encoder.";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "Represents the EV3 brick with connected actors and sensors. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.EXPAND_ALL = "Utvid blokker";
Blockly.Msg.EXPAND_BLOCK = "Utvid blokk";
Blockly.Msg.EXTERNAL_INPUTS = "Eksterne kilder";
<<<<<<< HEAD
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";
Blockly.Msg.FLAME_TOOLTIP = "Represents a flame sensor.";
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "You need a variable? Please declare it first with a click on the + sign at the »start«\u00a0block.";
Blockly.Msg.FOR = "for";
Blockly.Msg.FOURDIGITDISPLAY = "4-Digit Display";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Clears the Grove 4-Digit Display by Seeed.";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Displays a number [0-9999] on the Grove 4-Digit Display by Seeed. Position [0-3] represents the starting position of the number. The display has to be connected to the A1 (right) Grove connector.";  // untranslated
Blockly.Msg.FROM_POSITION = "from position";  // untranslated
Blockly.Msg.FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.GALLERY_BY = "by";
Blockly.Msg.GALLERY_DATE = "created";
Blockly.Msg.GALLERY_DISLIKE = "dislike";
Blockly.Msg.GALLERY_LIKE = "like";
Blockly.Msg.GALLERY_SHARED_ALREADY = "You have already uploaded this program to the gallery. If you want to change it, look for the copy from the gallery and modify it. You can also remove it from the gallery while deleting the copy from the gallery.";
Blockly.Msg.GET = "get";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Gets the current reading from chosen sensor.";
Blockly.Msg.GET_CODE_TOOLTIP = "Returns the value of the solderable code pad in the head piece. Values are in range 0-31.";
Blockly.Msg.GO_TO_GROUPS = "Go to groups";
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";
Blockly.Msg.GYRO_RESET_TOOLTIP = "Resets the gyro sensor.";
Blockly.Msg.GYRO_TOOLTIP = "Represents a gyro sensor.";
Blockly.Msg.HELP = "Hjelp";
Blockly.Msg.HINT_USER_ACCOUNT = "»IAmBotman« or »RobellaStracciatella«? Not everyone needs to know your real name. Think of a cool nickname that you can easily remember.";
Blockly.Msg.HINT_USER_AGE = "Are you under 16? Then please ask your parents to help you. They can specify their e-mail address to confirm your account.";
Blockly.Msg.HINT_USER_EMAIL = "This is voluntary! However, some functions of the lab are only available if you have verified your account by e-mail. You are younger than 16? Please ask your parents to help you out with one of their e-mail addresses. <br><a href=\"https://www.roberta-home.de/index.php?id=138&L=1\" target=\"_blank\">Further information ...</a>";
Blockly.Msg.HINT_USER_NAME = "Enter your real name here if you like. This is just for you, no one else will see it.";
Blockly.Msg.HINT_USER_PASSWORT = "12345 is no secure password. Rather think of a safe combination of numbers and letters that you will not forget.";
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Got it? Better make sure!";
Blockly.Msg.HUMIDITY_TOOLTIP = "Represents a humidity sensor.";  // untranslated
=======
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Represents a flame sensor.";  // untranslated
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "You need a variable? Please declare it first with a click on the + sign at the »start« block.";  // untranslated
Blockly.Msg.FOR = "for";  // untranslated
Blockly.Msg.GALLERY_BY = "by";  // untranslated
Blockly.Msg.GALLERY_DATE = "created";  // untranslated
Blockly.Msg.GALLERY_DISLIKE = "dislike";  // untranslated
Blockly.Msg.GALLERY_LIKE = "like";  // untranslated
Blockly.Msg.GALLERY_SHARED_ALREADY = "You have already uploaded this program to the gallery. If you want to change it, look for the copy from the gallery and modify it. You can also remove it from the gallery while deleting the copy from the gallery.";  // untranslated
Blockly.Msg.GET = "get";  // untranslated
Blockly.Msg.GETSAMPLE_TOOLTIP = "Gets the current reading from chosen sensor.";  // untranslated
Blockly.Msg.GET_CODE_TOOLTIP = "Returns the value of the solderable code pad in the head piece. Values are in range 0-31.";  // untranslated
Blockly.Msg.GO_TO_GROUPS = "Go to groups";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "Resets the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_TOOLTIP = "Represents a gyro sensor.";  // untranslated
Blockly.Msg.HELP = "Hjelp";
Blockly.Msg.HINT_USER_ACCOUNT = "»IAmBotman« or »RobellaStracciatella«? Not everyone needs to know your real name. Think of a cool nickname that you can easily remember.";  // untranslated
Blockly.Msg.HINT_USER_AGE = "Are you under 16? Then please ask your parents to help you. They can specify their e-mail address to confirm your account.";  // untranslated
Blockly.Msg.HINT_USER_EMAIL = "This is voluntary! However, some functions of the lab are only available if you have verified your account by e-mail. You are younger than 16? Please ask your parents to help you out with one of their e-mail addresses. <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.HINT_USER_NAME = "Enter your real name here if you like. This is just for you, no one else will see it.";  // untranslated
Blockly.Msg.HINT_USER_PASSWORT = "12345 is no secure password. Rather think of a safe combination of numbers and letters that you will not forget.";  // untranslated
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Got it? Better make sure!";  // untranslated
<<<<<<< HEAD
>>>>>>> #745 added base Uno files, configuration draft
=======
Blockly.Msg.HUMIDITY = "humidity";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.IF_TOOLTIP = "Checks the condition in »if«. If the condition is true, executes the »do« action.";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP = "Returns the chosen image.";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "angry";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "asleep";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "butterfly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "chessboard";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "confused";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "cow";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "small diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "duck";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "fabulous";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "ghost";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "giraffe";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "small heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "house";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "meh!";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "music crotchet";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "music quaver";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "music quavers";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "no";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "pacman";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "pitchfork";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "rabbit";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "rollerskate";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "sad";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "silly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "skull";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "smile";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "snake";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "small square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "stickfigure";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "sword";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "target";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "tortoise";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "triangle";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "triangle left";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "T-shirt";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "umbrella";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "xmas";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "yes";  // untranslated
Blockly.Msg.IMAGE_INVERT = "invert";  // untranslated
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Inverts the image. Each pixel with value 0 or none will be set to # or 9 and pixels with value # or 9 will be set to 0 or none.";  // untranslated
Blockly.Msg.IMAGE_SHIFT = "shift";  // untranslated
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Shifts the image in the given direction by the given number";  // untranslated
Blockly.Msg.IMAGE_TOOLTIP = "Creates an image for the display. You can specify the brightness of each pixel from 0 to 9 or # where 0 means no light, 1 is a bit bright and 9 or # is the brightest value.";  // untranslated
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Document your program here ...";  // untranslated
Blockly.Msg.INFO_TAGS = "Tags";  // untranslated
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gets the current relative distance from the infrared sensor. The values are between 1 and 75 cm.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Returns an array of measurements for the presence of a beacon.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "Represents an infrared sensor.";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Interne kilder";
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INTERNAL_PORT = "internal";  // untranslated
<<<<<<< HEAD
Blockly.Msg.IRSEEKER_TOOLTIP = "Represents a HiTechnic NXT IRSeeker V2 sensor.";  // untranslated
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Gets the current reading of one of the axises of the joystick";
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";
Blockly.Msg.KEY_TOOLTIP = "Represents a button.";  // untranslated
Blockly.Msg.LANGUAGE = "language";  // untranslated
Blockly.Msg.LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.LANGUAGE_DANISH = "Danish";  // untranslated
Blockly.Msg.LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.LANGUAGE_FINNISH = "Finnish";  // untranslated
Blockly.Msg.LANGUAGE_FRENCH = "French";  // untranslated
Blockly.Msg.LANGUAGE_GERMAN = "German";  // untranslated
Blockly.Msg.LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.LANGUAGE_ITALIAN = "Italian";  // untranslated
Blockly.Msg.LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.LANGUAGE_NORWEGIAN = "Norwegian";  // untranslated
Blockly.Msg.LANGUAGE_POLISH = "Polish";  // untranslated
Blockly.Msg.LANGUAGE_PORTUGUESE = "Portuguese";  // untranslated
Blockly.Msg.LANGUAGE_RUSSIAN = "Russian";  // untranslated
Blockly.Msg.LANGUAGE_SPANISH = "Spanish";  // untranslated
Blockly.Msg.LANGUAGE_SWEDISH = "Swedish";  // untranslated
Blockly.Msg.LANGUAGE_TURKISH = "Turkish";  // untranslated
<<<<<<< HEAD
Blockly.Msg.LCDI2C_TOOLTIP = "Represents an LCD I2C display.";  // untranslated
Blockly.Msg.LCD_TOOLTIP = "Represents an LCD display.";  // untranslated
Blockly.Msg.LED = "LED";  // untranslated
Blockly.Msg.LEDBAR = "LED Bar";  // untranslated
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Sets the specified LED [0-9] on the Grove LED Bar v2.0 by Seeed to the given brightness [0-8]. The LED Bar has to be connected to the A1 (right) Grove connector.";  // untranslated
Blockly.Msg.LED_OFF = "turn LED off";
Blockly.Msg.LED_OFF_TOOLTIP = "Turns the LED off.";
Blockly.Msg.LED_ON = "turn LED on";
Blockly.Msg.LED_ON_TOOLTIP = "Turns the LED on and changes the color.";
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Turns the LED on. Watch out, it\"s very bright!";
Blockly.Msg.LED_TOOLTIP = "Represents an LED.";  // untranslated
=======
=======
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Gets the current reading of one of the axises of the joystick";  // untranslated
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.LCD = "LCD";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.LED = "LED";  // untranslated
Blockly.Msg.LED_OFF = "turn LED off";  // untranslated
Blockly.Msg.LED_OFF_TOOLTIP = "Turns the LED off.";  // untranslated
Blockly.Msg.LED_ON = "turn LED on";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP = "Turns the LED on and changes the color.";  // untranslated
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Turns the LED on. Watch out, it's very bright!";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.LEFT = "left";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Represents 8 light sensors.";  // untranslated
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gets the current reading from the light sensor.";  // untranslated
Blockly.Msg.LIGHT_TOOLTIP = "Represents a light sensor.";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "opprett en tom liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returnerer en tom liste, altså med lengde 0";
Blockly.Msg.LISTS_CREATE_TITLE = "list";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Legg til, fjern eller endre rekkefølgen for å endre på denne delen av listen.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "lag en liste med";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Tilføy et element til listen.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Lag en liste med et vilkårlig antall elementer.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "først";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# fra slutten";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "hent";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hent og fjern";
Blockly.Msg.LISTS_GET_INDEX_LAST = "siste";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "tilfeldig";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fjern";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnerer det første elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returner elementet på den angitte posisjonen i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returner elementet på den angitte posisjonen i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnerer det siste elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returnerer et tilfeldig element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fjerner og returnerer det første elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fjerner og returnerer elementet ved en gitt posisjon i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fjerner og returnerer elementet ved en gitt posisjon i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fjerner og returnerer det siste elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fjerner og returnerer et tilfeldig element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fjerner det første elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Fjerner et element ved en gitt posisjon i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Fjerner et element ved en gitt posisjon i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fjerner det siste elementet i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fjerner et tilfeldig element i en liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "til # fra slutten";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "til #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "til siste";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "Hent en del av listen";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "Hent de siste # elementene";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "Hent del-listen fra #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Kopiérer en ønsket del av en liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "finn første forekomst av elementet";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "finn siste forekomst av elementet";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returnerer indeksen av den første/siste forekomsten av elementet i lista. Returnerer -1 hvis ikke funnet.";
Blockly.Msg.LISTS_INLIST = "i listen";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returnerer sann hvis listen er tom.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "lengden på %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnerer lengden til en liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "Lag en liste hvor elementet %1 forekommer %2 ganger";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Lager en liste hvor den gitte verdien gjentas et antall ganger.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "som";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "sett inn ved";
Blockly.Msg.LISTS_SET_INDEX_SET = "sett";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Setter inn elementet i starten av en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Tilføy elementet til slutten av en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Setter inn elementet ved en tilfeldig posisjon i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Angir det første elementet i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det siste elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Setter inn elementet ved den angitte posisjonen i en liste. #1 er det første elementet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Angir det siste elementet i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Angir et tilfeldig element i en liste.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "lag liste av tekst";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "lag tekst av liste";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LIST_BACK_TOOLTIP = "Back to previous view.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "usann";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnerer enten sann eller usann.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "sann";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Returnerer sann hvis begge inputene er like hverandre.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Returnerer sant hvis det første argumentet er større enn den andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Returnerer sant hvis det første argumentet er større enn eller likt det andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Returnerer sant hvis det første argumentet er mindre enn det andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Returnerer sant hvis det første argumentet er mindre enn eller likt det andre argumentet.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Returnerer sant hvis begge argumentene er ulike hverandre.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "ikke %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returnerer sant hvis argumentet er usant. Returnerer usant hvis argumentet er sant.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returnerer null.";
Blockly.Msg.LOGIC_OPERATION_AND = "og";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "eller";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Returnerer sant hvis begge argumentene er sanne.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Returnerer sant hvis minst ett av argumentene er sant.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "hvis usant";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "hvis sant";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Sjekk betingelsen i 'test'. Hvis betingelsen er sann, da returneres 'hvis sant' verdien. Hvis ikke returneres 'hvis usant' verdien.";
Blockly.Msg.LOOP = "repeat until";  // untranslated
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Repeats indefinitely an action.";  // untranslated
Blockly.Msg.LOOP_FOREVER = "repeat indefinitely";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://no.wikipedia.org/wiki/Aritmetikk";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnerer summen av to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Returner kvotienten av to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Returner differansen mellom to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Returner produktet av to tall.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Returner det første tallet opphøyd i den andre tallet.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "endre %1 ved %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Addere et tall til variabelen '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Returner en av felleskonstantene π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), eller ∞ (uendelig).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "begrense %1 lav %2 høy %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Begrens et tall til å være mellom de angitte grenseverdiene (inklusiv).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "er delelig med";
Blockly.Msg.MATH_IS_EVEN = "er et partall";
Blockly.Msg.MATH_IS_NEGATIVE = "er negativer negativt";
Blockly.Msg.MATH_IS_ODD = "er et oddetall";
Blockly.Msg.MATH_IS_POSITIVE = "er positivt";
Blockly.Msg.MATH_IS_PRIME = "er et primtall";
Blockly.Msg.MATH_IS_TOOLTIP = "Sjekk om et tall er et partall, oddetall, primtall, heltall, positivt, negativt, eller om det er delelig med et annet tall. Returnerer sant eller usant.";
Blockly.Msg.MATH_IS_WHOLE = "er et heltall";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resten av %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Returner resten fra delingen av to tall.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "x";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Et tall.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "gjennomsnittet av listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maksimum av liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medianen til listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum av listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "Listens typetall";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "tilfeldig element i listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standardavviket til listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "summen av listen";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Returner det aritmetiske gjennomsnittet av tallene i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Returner det største tallet i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Returner listens median.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Returner det minste tallet i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Returner en liste av de vanligste elementene i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Returner et tilfeldig element fra listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Returner listens standardavvik.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Returner summen av alle tallene i listen.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "tilfeldig flyttall";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Returner et tilfeldig flyttall mellom 0.0 (inkludert) og 1.0 (ikke inkludert).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "Et tilfeldig heltall mellom %1 og %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Returner et tilfeldig tall mellom de to spesifiserte grensene, inkludert de to.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "avrunding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "rund ned";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "rund opp";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Avrund et tall ned eller opp.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluttverdi";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratrot";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Returner absoluttverdien av et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Returner e opphøyd i et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Returner den naturlige logaritmen til et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Returner base-10 logaritmen til et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Returner det negative tallet.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Returner 10 opphøyd i et tall.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Returner kvadratroten av et tall.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Returner arccosinus til et tall.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Returner arcsinus til et tall.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Returner arctangens til et tall.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Returner cosinus av en vinkel (ikke radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Returner sinus av en vinkel (ikke radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Returner tangenten av en vinkel (ikke radian).";
Blockly.Msg.ME = "Jeg";
Blockly.Msg.MENU_ABOUT = "about the Open Roberta Lab";  // untranslated
Blockly.Msg.MENU_ABOUT_PROJECT = "about the Open Roberta Project";  // untranslated
Blockly.Msg.MENU_ATTACH = "attach ...";  // untranslated
Blockly.Msg.MENU_BEGINNER = "beginner";  // untranslated
Blockly.Msg.MENU_CHANGE = "change ...";  // untranslated
Blockly.Msg.MENU_CHECK = "check";  // untranslated
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Download the source code of your program on the computer";  // untranslated
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Refresh the source code, if you have changed the NEPO Blocks.";  // untranslated
Blockly.Msg.MENU_CONNECT = "connect ...";  // untranslated
Blockly.Msg.MENU_CREATE_LINK = "create program link ...";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "delete user ...";  // untranslated
Blockly.Msg.MENU_EDIT = "edit";  // untranslated
Blockly.Msg.MENU_EDIT_TOOLTIP = "edit";  // untranslated
Blockly.Msg.MENU_EV3 = "Robot preparation";  // untranslated
Blockly.Msg.MENU_EXPERT = "expert";  // untranslated
Blockly.Msg.MENU_EXPORT_PROG = "export program";  // untranslated
Blockly.Msg.MENU_FAQ = "FAQ";  // untranslated
Blockly.Msg.MENU_GALLERY = "gallery";  // untranslated
Blockly.Msg.MENU_GALLERY_TOOLTIP = "gallery";  // untranslated
Blockly.Msg.MENU_GENERAL = "general help";  // untranslated
Blockly.Msg.MENU_HELP = "help";  // untranslated
Blockly.Msg.MENU_HELP_TOOLTIP = "help";  // untranslated
Blockly.Msg.MENU_IMPORT_PROG = "import program";  // untranslated
Blockly.Msg.MENU_LANGUAGE = "languages";  // untranslated
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "languages";  // untranslated
Blockly.Msg.MENU_LIST = "list ...";  // untranslated
Blockly.Msg.MENU_LIST_CONF = "my configurations ...";  // untranslated
Blockly.Msg.MENU_LIST_PROG = "my programs ...";  // untranslated
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "example programs ...";  // untranslated
Blockly.Msg.MENU_LOGGING = "logging";  // untranslated
Blockly.Msg.MENU_LOG_IN = "login ...";  // untranslated
Blockly.Msg.MENU_LOG_OUT = "logout";  // untranslated
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Your program has been successfully downloaded.";  // untranslated
Blockly.Msg.MENU_NEW = "new ...";  // untranslated
Blockly.Msg.MENU_PROGRAMMING = "programming with NEPO";  // untranslated
<<<<<<< HEAD
Blockly.Msg.MENU_PROPERTIES = "properties";
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Open/close the source code view.";  // untranslated
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Open/close help view";
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Open/close info view";
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Open/close the simulation view.";  // untranslated
Blockly.Msg.MENU_ROBOT = "robot";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "info";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "robot info";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Press <span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span> buttons on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Press <span class='typcn typcn-media-cancel'></span> button on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "robots";
Blockly.Msg.MENU_SAVE = "save";
Blockly.Msg.MENU_SAVE_AS = "save as ...";
Blockly.Msg.MENU_SHOW_AGAIN = "show welcome note again";
Blockly.Msg.MENU_SHOW_CODE = "open/close source code view";
Blockly.Msg.MENU_SIM_BACK = "Back";
Blockly.Msg.MENU_SIM_DRAW = "Drawing Scene";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Upload your own simulation background image, it will be appended at the end of the background\"s list.";
Blockly.Msg.MENU_SIM_MATH = "Math Scene";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Move the robot back to it\"s initial position.";
Blockly.Msg.MENU_SIM_RESCUE = "Rescue Scene";
Blockly.Msg.MENU_SIM_ROBERTA = "Roberta Scene";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "open/close the robot\"s view";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "change the scene";
Blockly.Msg.MENU_SIM_SIMPLE = "Simple Scene";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Start your program in the simulation.";
Blockly.Msg.MENU_SIM_STOP = "Stop";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Stop your program in the simulation.";
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Open/close the sensors\" data view.";
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad scene";
Blockly.Msg.MENU_START_BRICK = "run on »$«";
Blockly.Msg.MENU_START_SIM = "open/close simulation view";
Blockly.Msg.MENU_STATE_INFO = "state information";
Blockly.Msg.MENU_TOOLBOX = "NEPO-Blocks";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-Blocks beginner";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-Blocks expert";
Blockly.Msg.MENU_USER = "login";
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "user info";
Blockly.Msg.MENU_USER_TOOLTIP = "user";
Blockly.Msg.MENU_ZOOM = "zoom";
Blockly.Msg.MENU_ZOOM_IN = "zoom in";
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";
Blockly.Msg.MESSAGE_ADDED_USER = "User »$« was added";
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Configuration »$« was deleted";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Your program is now checked!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Your configuration has been saved";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Your configuration has been saved as »$«";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Your group has been created";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Your program has been saved";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Your program has been saved as »$«";
Blockly.Msg.MESSAGE_EDIT_START = "Your program »$« will run in a moment!";
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "There is a conflict with the firmware version of your robot and the Open Roberta Lab. Please contact us.";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Group »$« was deleted";
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers. The default name »[robot]basis« can't be used here.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers.";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Not available.";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Program »$« was deleted";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Please reconnect the robot to the Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Your robot »$« is connected";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "An active robot was disconnected";
Blockly.Msg.MESSAGE_USER_DELETED = "User deleted";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "User »$« was deleted";
Blockly.Msg.MESSAGE_USER_LOGIN = "Hello »$«";
Blockly.Msg.MESSAGE_USER_LOGOUT = "You are logged out";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";
Blockly.Msg.MODE = "mode";
Blockly.Msg.MODE_ACCELERATION = "acceleration";
Blockly.Msg.MODE_AMBIENTLIGHT = "ambient light";
=======
Blockly.Msg.MENU_PROPERTIES = "properties";  // untranslated
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Open/close help view";  // untranslated
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Open/close info view";  // untranslated
Blockly.Msg.MENU_ROBOT = "robot";  // untranslated
Blockly.Msg.MENU_ROBOT_STATE_INFO = "info";  // untranslated
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "robot info";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Press <span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span>on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Press <span class='typcn typcn-media-cancel'></span>on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "robots";  // untranslated
Blockly.Msg.MENU_SAVE = "save";  // untranslated
Blockly.Msg.MENU_SAVE_AS = "save as ...";  // untranslated
Blockly.Msg.MENU_SHOW_AGAIN = "show welcome note again";  // untranslated
Blockly.Msg.MENU_SHOW_CODE = "open/close source code view";  // untranslated
Blockly.Msg.MENU_SIM_BACK = "Back";  // untranslated
Blockly.Msg.MENU_SIM_DRAW = "Drawing Scene";  // untranslated
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Upload your own simulation background image, it will be appended at the end of the background's list.";  // untranslated
Blockly.Msg.MENU_SIM_MATH = "Math Scene";  // untranslated
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Move the robot back to it's initial position.";  // untranslated
Blockly.Msg.MENU_SIM_RESCUE = "Rescue Scene";  // untranslated
Blockly.Msg.MENU_SIM_ROBERTA = "Roberta Scene";  // untranslated
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "open/close the robot's view";  // untranslated
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "change the scene";  // untranslated
Blockly.Msg.MENU_SIM_SIMPLE = "Simple Scene";  // untranslated
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Start your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_STOP = "Stop";  // untranslated
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Stop your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Open/close the sensors' data view.";  // untranslated
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad scene";  // untranslated
Blockly.Msg.MENU_START_BRICK = "run on »$«";  // untranslated
Blockly.Msg.MENU_START_SIM = "open/close simulation view";  // untranslated
Blockly.Msg.MENU_STATE_INFO = "state information";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "NEPO-Blocks";  // untranslated
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-Blocks beginner";  // untranslated
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-Blocks expert";  // untranslated
Blockly.Msg.MENU_USER = "login";  // untranslated
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "user info";  // untranslated
Blockly.Msg.MENU_USER_TOOLTIP = "user";  // untranslated
Blockly.Msg.MENU_ZOOM = "zoom";  // untranslated
Blockly.Msg.MENU_ZOOM_IN = "zoom in";  // untranslated
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";  // untranslated
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";  // untranslated
Blockly.Msg.MESSAGE_ADDED_USER = "User »$« was added";  // untranslated
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Configuration »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_EDIT_CHECK = "Your program is now checked!";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Your configuration has been saved";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Your configuration has been saved as »$«";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Your group has been created";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Your program has been saved";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Your program has been saved as »$«";  // untranslated
Blockly.Msg.MESSAGE_EDIT_START = "Your program »$« will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "There is a conflict with the firmware version of your robot and the Open Roberta Lab. Please contact us.";  // untranslated
Blockly.Msg.MESSAGE_GROUP_DELETED = "Group »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers.";  // untranslated
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Not available.";  // untranslated
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Program »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Please reconnect the robot to the Open Roberta Lab.";  // untranslated
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Your robot »$« is connected";  // untranslated
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "An active robot was disconnected";  // untranslated
Blockly.Msg.MESSAGE_USER_DELETED = "User deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "User »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGIN = "Hello »$«";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGOUT = "You are logged out";  // untranslated
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "mode";  // untranslated
Blockly.Msg.MODE_ACCELERATION = "acceleration";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "ambient light";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.MODE_ANALOG = "analog";  // untranslated
<<<<<<< HEAD
Blockly.Msg.MODE_ANGLE = "angle";
Blockly.Msg.MODE_CLOSE = "close";
Blockly.Msg.MODE_COLOUR = "colour";
Blockly.Msg.MODE_COMPASS = "compass";  // untranslated
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DEGREE = "degree";
Blockly.Msg.MODE_DIGITAL = "digital";  // untranslated
Blockly.Msg.MODE_DISTANCE = "distance";
Blockly.Msg.MODE_HUMIDITY = "humidity";  // untranslated
Blockly.Msg.MODE_IDALL = "IDs (list)";  // untranslated
Blockly.Msg.MODE_IDONE = "ID";  // untranslated
Blockly.Msg.MODE_INFO = "information";  // untranslated
Blockly.Msg.MODE_LIGHT = "light";
Blockly.Msg.MODE_MODULATED = "modulated";  // untranslated
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
Blockly.Msg.MODE_NAMEALL = "names (list)";  // untranslated
Blockly.Msg.MODE_NAMEONE = "name";  // untranslated
Blockly.Msg.MODE_OBSTACLE = "obstacle";
Blockly.Msg.MODE_OPEN = "open";
Blockly.Msg.MODE_ORIENTATION = "orientation";
Blockly.Msg.MODE_PRESENCE = "presence";
Blockly.Msg.MODE_PRESSED = "pressed";  // untranslated
Blockly.Msg.MODE_PULSE_HIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSE_LOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "rate";
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "rotation";
Blockly.Msg.MODE_SERIAL = "card serial";  // untranslated
Blockly.Msg.MODE_SOUND = "sound";
Blockly.Msg.MODE_TEMPERATURE = "temperature";  // untranslated
Blockly.Msg.MODE_UNMODULATED = "unmodulated";  // untranslated
=======
Blockly.Msg.MODE_ANGLE = "angle";  // untranslated
Blockly.Msg.MODE_CLOSE = "close";  // untranslated
Blockly.Msg.MODE_COLOUR = "colour";  // untranslated
Blockly.Msg.MODE_DEGREE = "degree";  // untranslated
Blockly.Msg.MODE_DIGITAL = "digital";  // untranslated
Blockly.Msg.MODE_DISTANCE = "distance";  // untranslated
Blockly.Msg.MODE_LIGHT = "light";  // untranslated
Blockly.Msg.MODE_OBSTACLE = "obstacle";  // untranslated
Blockly.Msg.MODE_OPEN = "open";  // untranslated
Blockly.Msg.MODE_ORIENTATION = "orientation";  // untranslated
Blockly.Msg.MODE_PRESENCE = "presence";  // untranslated
Blockly.Msg.MODE_PRESSED = "pressed";  // untranslated
Blockly.Msg.MODE_PULSE_HIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSE_LOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "rate";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";  // untranslated
Blockly.Msg.MODE_ROTATION = "rotation";  // untranslated
Blockly.Msg.MODE_SOUND = "sound";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.MODE_VALUE = "value";  // untranslated
<<<<<<< HEAD
<<<<<<< HEAD
Blockly.Msg.MODE_WORD = "word";  // untranslated
=======
<<<<<<< HEAD
>>>>>>> #745 added base Uno files, configuration draft
=======
<<<<<<< HEAD
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.MOISTURE_TOOLTIP = "Represents a moisture sensor.";  // untranslated
Blockly.Msg.MOTION_TOOLTIP = "Represents a motion sensor.";  // untranslated
Blockly.Msg.MOTOR = "motor";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Starts the robot with specific speed and stops after specific distance.";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Starts the robot with specific speed.";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Stops the robot.";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Turns the robot for number of degrees.";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Turns the robot.";
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Represents a Bot\"n Roll chassis motor.";
Blockly.Msg.MOTOR_BACKWARD = "backwards";
Blockly.Msg.MOTOR_BIG = "big";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Represents a big motor.";
Blockly.Msg.MOTOR_BRAKE = "brake";
Blockly.Msg.MOTOR_DEGREE = "degree";
Blockly.Msg.MOTOR_DISTANCE = "distance cm";
Blockly.Msg.MOTOR_DRIVE = "drive";
Blockly.Msg.MOTOR_FLOAT = "float";
Blockly.Msg.MOTOR_FOREWARD = "forwards";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Gets current power of this motor.";
Blockly.Msg.MOTOR_LEFT = "left";
Blockly.Msg.MOTOR_MIDDLE = "middle";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Represents a middle motor.";
Blockly.Msg.MOTOR_NONE = "none";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Turns motor on and stops motor after execution of rotations/degrees.";
Blockly.Msg.MOTOR_ON_TOOLTIP = "Turns motor on with specific power.";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Turns motor A, B or A+B on with a specific power.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "other power consumer";
Blockly.Msg.MOTOR_PAN = "pan";
Blockly.Msg.MOTOR_PORT = "motor port";
Blockly.Msg.MOTOR_REGULATION = "regulation";
Blockly.Msg.MOTOR_RIGHT = "right";
Blockly.Msg.MOTOR_ROTATION = "rotation";
Blockly.Msg.MOTOR_ROTATION_REVERSE = "direction of rotation";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Sets power of this motor.";
Blockly.Msg.MOTOR_SIDE = "side";
Blockly.Msg.MOTOR_SPEED = "speed %";
Blockly.Msg.MOTOR_SPEED_0 = "Motor Speed is 0!";
Blockly.Msg.MOTOR_STEER = "steer";
Blockly.Msg.MOTOR_STOP = "stop";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Stops this motor.";
Blockly.Msg.MOTOR_TILT = "tilt";
Blockly.Msg.MOTOR_TURN = "turn";
Blockly.Msg.NAO_ABSOLUTE = "absolute";
Blockly.Msg.NAO_ACCELEROMETER = "accelerometer";
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation. TaiChi is a complex and artistic set of moves. Blink will only make the robot blink by using its LEDs. The wink and wipe forehead animation can be performed while siting and standing.";
Blockly.Msg.NAO_ANSWER = "answer";
Blockly.Msg.NAO_APPLYPOSTURE = "apply posture";
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot goes into the selected posture. Use the dropdown menu to choose between different stand, sit and lying positions.";
Blockly.Msg.NAO_AUTONOMOUS = "autonomous life";
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Turn the robots autonomous life on or off. When it is turned on the robot will react to sounds and try to detect faces. Turn it off if this behaviour interrupts your programm.";
Blockly.Msg.NAO_BLINK = "blink";
Blockly.Msg.NAO_CAMERA = "camera";
Blockly.Msg.NAO_CAMERA_BOTTOM = "bottom";
Blockly.Msg.NAO_CAMERA_TOP = "top";
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "This block will return additional information about the given recognized face in the format on a 1-d array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";
Blockly.Msg.NAO_FILENAME = "filename";
Blockly.Msg.NAO_FORGETFACEOF = "forget face of";
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Delete a face previously saved under a given name from the vision recognition database on the robot. ";
Blockly.Msg.NAO_FRAME = "frame";
Blockly.Msg.NAO_FRAME_TORSO = "torso";
Blockly.Msg.NAO_FRAME_WORLD = "world";
Blockly.Msg.NAO_FSR = "force sensitive resistor";
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get the volume.";
Blockly.Msg.NAO_GYROMETER = "gyrometer";
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";
Blockly.Msg.NAO_HAND = "hand";
Blockly.Msg.NAO_HAND_TOOLTIP = "Open or close a single hand of the robot.";
Blockly.Msg.NAO_HEADSENSOR = "head sensor";
Blockly.Msg.NAO_INTENSITY = "intensity";
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";
Blockly.Msg.NAO_JOINT_HAND = "hand";
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";
Blockly.Msg.NAO_LEARNFACEOF = "learn face of";
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name in the vision recognition database on the robot.";
Blockly.Msg.NAO_LED = "LED";
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the selected LEDs off.";
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";
Blockly.Msg.NAO_LED_ALL = "all";
Blockly.Msg.NAO_LED_CHEST = "chest";
Blockly.Msg.NAO_LED_EAR = "ear";
Blockly.Msg.NAO_LED_EARS = "ears";
Blockly.Msg.NAO_LED_EYE = "eye";
Blockly.Msg.NAO_LED_EYES = "eyes";
Blockly.Msg.NAO_LED_FOOT = "foot";
Blockly.Msg.NAO_LED_HEAD = "head";
Blockly.Msg.NAO_LED_TOOLTIP = "Set the color of a group of LEDs.";
Blockly.Msg.NAO_LOOKAT = "look at";
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "This block will return additional information about the given NAO mark in the format on a 1-d array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";
Blockly.Msg.NAO_MOVE = "move";
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";
Blockly.Msg.NAO_PART_ARM = "arm";
Blockly.Msg.NAO_PART_ARMS = "arms";
Blockly.Msg.NAO_PART_BODY = "body";
Blockly.Msg.NAO_PART_HEAD = "head";
Blockly.Msg.NAO_PART_LEG = "leg";
Blockly.Msg.NAO_PART_LEGS = "legs";
Blockly.Msg.NAO_PERFORM = "perform";
Blockly.Msg.NAO_PHRASE = "phrase";
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";
Blockly.Msg.NAO_PLAY_FILE = "play file";
Blockly.Msg.NAO_POINTAT = "point at";
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";
Blockly.Msg.NAO_POSTURE_CROUCH = "Crouch";
Blockly.Msg.NAO_POSTURE_LYINGBACK = "LyingBack";
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "LyingBelly";
Blockly.Msg.NAO_POSTURE_REST = "rest";  // untranslated
Blockly.Msg.NAO_POSTURE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "SitRelax";
Blockly.Msg.NAO_POSTURE_STAND = "Stand";
Blockly.Msg.NAO_POSTURE_STANDINIT = "StandInit";
Blockly.Msg.NAO_POSTURE_STANDZERO = "StandZero";
Blockly.Msg.NAO_QQVGA = "160*120";
Blockly.Msg.NAO_QVGA = "320*240";
Blockly.Msg.NAO_RANDOMEYES = "random eyes";
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time entered in milliseconds.";
Blockly.Msg.NAO_RASTA = "rasta";
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time entered in milliseconds.";
Blockly.Msg.NAO_RECOGNIZEWORD = "recognize word from list";
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Return a word from the given list when recognized by NAO";
Blockly.Msg.NAO_RECORDVIDEO = "record video";
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot. Access the robots file system to view the video.";
Blockly.Msg.NAO_RELATIVE = "relative";
Blockly.Msg.NAO_RESOLUTION = "resolution";
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of a group of LEDs in a range from 0 to 100.";
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";
Blockly.Msg.NAO_STIFFNESS = "stiffness of";
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot is turned on or off. Be aware that releasing the leg motors while the robot is standing may result in downfall.";
Blockly.Msg.NAO_STOP = "stop movement";
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";
Blockly.Msg.NAO_TAI_CHI = "tai chi";
Blockly.Msg.NAO_TAKEPICTURE = "take picture";
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";
Blockly.Msg.NAO_VGA = "640*480";
Blockly.Msg.NAO_WALK = "walk";
Blockly.Msg.NAO_WALKTO = "walk to";
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Makes the robot walk infinitely";
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance entered in cm. Distances below 10cm might lead to no movement at all. Depending on your robot and the surface the robots is walking on the distance might not be exact.";
Blockly.Msg.NAO_WAVE = "wave";
Blockly.Msg.NAO_WIPE_FOREHEAD = "wipe forehead";
=======
=======
Blockly.Msg.MOTION_SENSOR = "motion sensor";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.MOTOR = "motor";  // untranslated
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Starts the robot with specific speed and stops after specific distance.";  // untranslated
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Starts the robot with specific speed.";  // untranslated
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Stops the robot.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Turns the robot for number of degrees.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Turns the robot.";  // untranslated
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Represents a Bot'n Roll chassis motor.";  // untranslated
Blockly.Msg.MOTOR_BACKWARD = "backwards";  // untranslated
Blockly.Msg.MOTOR_BIG = "big";  // untranslated
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Represents a big motor.";  // untranslated
Blockly.Msg.MOTOR_BRAKE = "brake";  // untranslated
Blockly.Msg.MOTOR_DEGREE = "degree";  // untranslated
Blockly.Msg.MOTOR_DISTANCE = "distance cm";  // untranslated
Blockly.Msg.MOTOR_DRIVE = "drive";  // untranslated
Blockly.Msg.MOTOR_FLOAT = "float";  // untranslated
Blockly.Msg.MOTOR_FOREWARD = "forwards";  // untranslated
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Gets current power of this motor.";  // untranslated
Blockly.Msg.MOTOR_LEFT = "left";  // untranslated
Blockly.Msg.MOTOR_MIDDLE = "middle";  // untranslated
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Represents a middle motor.";  // untranslated
Blockly.Msg.MOTOR_NONE = "none";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Turns motor on and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "Turns motor on with specific power.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "other power consumer";  // untranslated
Blockly.Msg.MOTOR_PAN = "pan";  // untranslated
Blockly.Msg.MOTOR_PORT = "motor port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "regulation";  // untranslated
Blockly.Msg.MOTOR_RIGHT = "right";  // untranslated
Blockly.Msg.MOTOR_ROTATION = "rotation";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "direction of rotation";  // untranslated
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Sets power of this motor.";  // untranslated
Blockly.Msg.MOTOR_SIDE = "side";  // untranslated
Blockly.Msg.MOTOR_SPEED = "speed %";  // untranslated
Blockly.Msg.MOTOR_SPEED_0 = "Motor Speed is 0!";  // untranslated
Blockly.Msg.MOTOR_STEER = "steer";  // untranslated
Blockly.Msg.MOTOR_STOP = "stop";  // untranslated
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Stops this motor.";  // untranslated
Blockly.Msg.MOTOR_TILT = "tilt";  // untranslated
Blockly.Msg.MOTOR_TURN = "turn";  // untranslated
Blockly.Msg.NAO_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";  // untranslated
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation. TaiChi is a complex and artistic set of moves. Blink will only make the robot blink by using its LEDs. The wink and wipe forehead animation can be performed while siting and standing.";  // untranslated
Blockly.Msg.NAO_ANSWER = "answer";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE = "apply posture";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot goes into the selected posture. Use the dropdown menu to choose between different stand, sit and lying positions.";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS = "autonomous life";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Turn the robots autonomous life on or off. When it is turned on the robot will react to sounds and try to detect faces. Turn it off if this behaviour interrupts your programm.";  // untranslated
Blockly.Msg.NAO_BLINK = "blink";  // untranslated
Blockly.Msg.NAO_CAMERA = "camera";  // untranslated
Blockly.Msg.NAO_CAMERA_BOTTOM = "bottom";  // untranslated
Blockly.Msg.NAO_CAMERA_TOP = "top";  // untranslated
Blockly.Msg.NAO_CURRENT = "electric current of";  // untranslated
Blockly.Msg.NAO_DETECTFACE = "get last recognized face(s)";  // untranslated
Blockly.Msg.NAO_DETECTFACE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.NAO_DIALOG_TOOLTIP = "The robot tries to recognize the phrase and answers on success.";  // untranslated
Blockly.Msg.NAO_FACE_GET_INFORMATION = "get information about recognized face";  // untranslated
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "This block will return additional information about the given recognized face in the format on a 1-d array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_FILENAME = "filename";  // untranslated
Blockly.Msg.NAO_FORGETFACEOF = "forget face of";  // untranslated
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Delete a face previously saved under a given name from the vision recognition database on the robot. ";  // untranslated
Blockly.Msg.NAO_FRAME = "frame";  // untranslated
Blockly.Msg.NAO_FRAME_TORSO = "torso";  // untranslated
Blockly.Msg.NAO_FRAME_WORLD = "world";  // untranslated
Blockly.Msg.NAO_FSR = "force sensitive resistor";  // untranslated
Blockly.Msg.NAO_FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.NAO_GETCURRENT_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE = "get language";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get the volume.";  // untranslated
Blockly.Msg.NAO_GYROMETER = "gyrometer";  // untranslated
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";  // untranslated
Blockly.Msg.NAO_HAND = "hand";  // untranslated
Blockly.Msg.NAO_HAND_TOOLTIP = "Open or close a single hand of the robot.";  // untranslated
Blockly.Msg.NAO_HEADSENSOR = "head sensor";  // untranslated
Blockly.Msg.NAO_INTENSITY = "intensity";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HAND = "hand";  // untranslated
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";  // untranslated
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";  // untranslated
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";  // untranslated
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";  // untranslated
Blockly.Msg.NAO_LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.NAO_LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.NAO_LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.NAO_LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.NAO_LANGUAGE_DANISH = "Dansk";  // untranslated
Blockly.Msg.NAO_LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.NAO_LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.NAO_LANGUAGE_FINNISH = "Suomi";  // untranslated
Blockly.Msg.NAO_LANGUAGE_FRENCH = "Français";  // untranslated
Blockly.Msg.NAO_LANGUAGE_GERMAN = "Deutsch";  // untranslated
Blockly.Msg.NAO_LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.NAO_LANGUAGE_ITALIAN = "Italiano";  // untranslated
Blockly.Msg.NAO_LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.NAO_LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.NAO_LANGUAGE_NORWEGIAN = "Norsk";  // untranslated
Blockly.Msg.NAO_LANGUAGE_POLISH = "Polski";  // untranslated
Blockly.Msg.NAO_LANGUAGE_PORTUGUESE = "Português";  // untranslated
Blockly.Msg.NAO_LANGUAGE_RUSSIAN = "Українська";  // untranslated
Blockly.Msg.NAO_LANGUAGE_SPANISH = "Español";  // untranslated
Blockly.Msg.NAO_LANGUAGE_SWEDISH = "Svensk";  // untranslated
Blockly.Msg.NAO_LANGUAGE_TURKISH = "Türkçe";  // untranslated
Blockly.Msg.NAO_LEARNFACEOF = "learn face of";  // untranslated
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name in the vision recognition database on the robot.";  // untranslated
Blockly.Msg.NAO_LED = "LED";  // untranslated
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the selected LEDs off.";  // untranslated
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "all";  // untranslated
Blockly.Msg.NAO_LED_CHEST = "chest";  // untranslated
Blockly.Msg.NAO_LED_EAR = "ear";  // untranslated
Blockly.Msg.NAO_LED_EARS = "ears";  // untranslated
Blockly.Msg.NAO_LED_EYE = "eye";  // untranslated
Blockly.Msg.NAO_LED_EYES = "eyes";  // untranslated
Blockly.Msg.NAO_LED_FOOT = "foot";  // untranslated
Blockly.Msg.NAO_LED_HEAD = "head";  // untranslated
Blockly.Msg.NAO_LED_TOOLTIP = "Set the color of a group of LEDs.";  // untranslated
Blockly.Msg.NAO_LOOKAT = "look at";  // untranslated
Blockly.Msg.NAO_MARK_GET_INFORMATION = "get information about NAO mark";  // untranslated
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "This block will return additional information about the given NAO mark in the format on a 1-d array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_MODE_ACTIVE = "active";  // untranslated
Blockly.Msg.NAO_MODE_REST = "rest";  // untranslated
Blockly.Msg.NAO_MODE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_MODE_TOOLTIP = "This block allows to move the robot in to three different modes. Active makes the robot activate all motors and go to a standing position. Rest makes the robotgo to a prone stance and deactivate all motors. In Sit also all motors will be deactivated and the robot will sit down.";  // untranslated
Blockly.Msg.NAO_MOVE = "move";  // untranslated
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";  // untranslated
Blockly.Msg.NAO_NAOMARK = "get last detected NAO mark(s)";  // untranslated
Blockly.Msg.NAO_NAOMARK_TOOLTIP = "Returns an array of IDs of last detected NAO marks. If no marks are detected, an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "arm";  // untranslated
Blockly.Msg.NAO_PART_ARMS = "arms";  // untranslated
Blockly.Msg.NAO_PART_BODY = "body";  // untranslated
Blockly.Msg.NAO_PART_HEAD = "head";  // untranslated
Blockly.Msg.NAO_PART_LEG = "leg";  // untranslated
Blockly.Msg.NAO_PART_LEGS = "legs";  // untranslated
Blockly.Msg.NAO_PERFORM = "perform";  // untranslated
Blockly.Msg.NAO_PHRASE = "phrase";  // untranslated
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "play file";  // untranslated
Blockly.Msg.NAO_POINTAT = "point at";  // untranslated
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "Crouch";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBACK = "LyingBack";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "LyingBelly";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "SitRelax";  // untranslated
Blockly.Msg.NAO_POSTURE_STAND = "Stand";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDINIT = "StandInit";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDZERO = "StandZero";  // untranslated
Blockly.Msg.NAO_QQVGA = "160*120";  // untranslated
Blockly.Msg.NAO_QVGA = "320*240";  // untranslated
Blockly.Msg.NAO_RANDOMEYES = "random eyes";  // untranslated
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RASTA = "rasta";  // untranslated
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEDWORD = "recognized word";  // untranslated
Blockly.Msg.NAO_RECOGNIZEDWORD_TOOLTIP = "Returns the last word the robot recognized.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD = "recognize word from list";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORDOR = "or recognize word";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Return a word from the given list when recognized by NAO";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO = "record video";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot. Access the robots file system to view the video.";  // untranslated
Blockly.Msg.NAO_RELATIVE = "relative";  // untranslated
Blockly.Msg.NAO_RESOLUTION = "resolution";  // untranslated
Blockly.Msg.NAO_SAY = "say";  // untranslated
Blockly.Msg.NAO_SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 50-400) and the shape of the voice (range: 50-200) with the input fields";  // untranslated
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of a group of LEDs in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE = "set language";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_SHAPE = "voice shape %";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "stiffness of";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot is turned on or off. Be aware that releasing the leg motors while the robot is standing may result in downfall.";  // untranslated
Blockly.Msg.NAO_STOP = "stop movement";  // untranslated
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "tai chi";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE = "take picture";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";  // untranslated
Blockly.Msg.NAO_TOUCH_BUMPER = "bumper";  // untranslated
Blockly.Msg.NAO_TOUCH_FRONT = "front";  // untranslated
Blockly.Msg.NAO_TOUCH_HAND = "hand";  // untranslated
Blockly.Msg.NAO_TOUCH_REAR = "rear";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";  // untranslated
Blockly.Msg.NAO_WALK = "walk";  // untranslated
Blockly.Msg.NAO_WALKTO = "walk to";  // untranslated
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";  // untranslated
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Makes the robot walk infinitely";  // untranslated
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance entered in cm. Distances below 10cm might lead to no movement at all. Depending on your robot and the surface the robots is walking on the distance might not be exact.";  // untranslated
Blockly.Msg.NAO_WAVE = "wave";  // untranslated
Blockly.Msg.NAO_WIPE_FOREHEAD = "wipe forehead";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.NEW_VARIABLE = "Ny variabel...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nytt variabelnavn:";
Blockly.Msg.NO = "no";  // untranslated
Blockly.Msg.NXTBRICK_TOOLTIP = "Represents the NXT brick with connected actors and sensors. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.OFF = "off";  // untranslated
Blockly.Msg.OLDER_THEN_14 = "I am 16 or older than 16!";  // untranslated
Blockly.Msg.ON = "on";  // untranslated
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Your are not allowed to share. Please activate your account! <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.ORA_COMMAND_INVALID = "Invalid Javascript-command";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "The robot configuration could not be found on the server.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "The robot configuration could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "The program could not be transformed into machine code.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "The program could not be generated.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "The program could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "The program could not be saved because of an internal error.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "The program could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "An error has occurred while deleting the robot configuration, please try it again!";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Configuration deleted";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Configuration name is not a valid identifier.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Configuration loaded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "The robot configuration could not be found in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Configuration loaded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "An error has occurred while saving the robot configuration.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Configuration saved";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Your program »$« couldn't be uploaded to the gallery, it seems as if it is already uploaded.";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Your program »$« is now in the gallery!";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "This group already exists";  // untranslated
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "You do not like program »$« anymore!";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "You couldn't like program »$«. Maybe you have already liked it.";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "You like program »$« now!";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "The owner does not exist.";  // untranslated
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Program is not compatible with the configuration";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "An error error has occurred while deleting the configuration. Please try it again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Program deleted";  // untranslated
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "The name of your  program is already used by the system. Please choose another name and try it again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Programs loaded";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Program not found.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "You are not logged in, please log in with your username and password or create a new user.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Program loaded";  // untranslated
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "»$.xml« is not a valid NEPO program and cannot be uploaded!";  // untranslated
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "You are trying to import a program for a robot of a different type as selected in the menu. <br> Please switch the robot type in the robot's menu and try to import again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "There are errors in your program. Please check the messages";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "This program already exists.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "You don't have the permission to modify this program!";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "This program has been changed recently by someone else. You can save your changes in a new program, choose >save as< !";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "The program could not be found, so it is impossible to update it.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Program saved";  // untranslated
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "The program that you would like to share does not exist.";  // untranslated
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "It seems that we do not support the desired robot system!<br>Please choose another one.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "An error has occurred while updating the new firmware on your robot.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "The firmware was updated";  // untranslated
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "There is no robot connected. Check if your robot is switched on, connect it to the server and type in the robot's password under robot - connect in the menu. <br /> If you have problems to do this, please have a look at our help pages.";  // untranslated
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "The robot does not wait for a run command.";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Robot waited and now the jar is pushed to the robot";  // untranslated
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Switched to robot system »$«!";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Server-Error";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Check if your robot is switched on and connected to the server. <br />If you have problems to do this, please have a look at our help pages.";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "You are trying to connect a robot of a different type as selected in the menu. <br> Please switch the robot type in the robot's menu and try to connect again!";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Token set";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "An error has occurred while deleting the toolbox, please try it again!";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Toolbox deleted";  // untranslated
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Toolbox name is not a valid identifier.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "The toolbox could not be found in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "An error has occurred while saving the toolbox.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Toolbox saved";  // untranslated
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "The link is not valid anymore. Please ask for resending your verification mail again";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »roberta-zentrale@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Your account is successfully verified! Please login!";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Your account name or your user name is to long. Please make sure that they are not longer then 25 digits. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "You are using some one or more special characters in your account name! Please remove them. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Please make sure you have filled in all required fields! Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "The given user name already exists in the database, please choose another user name.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "Your user account »$« was successfully created!";  // untranslated
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Your account is currently not verified, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Error while deleting user.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Error while deleting user in database.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Your account »$« was successfully deleted. Hope to see you soon again!";  // untranslated
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "This email address is unknown, maybe you have spelled it wrong!";  // untranslated
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "There is already an account with this email address registered. Please enter another email address!";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Users loaded";  // untranslated
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "You have entered wrong user name or password. Please try again!";  // untranslated
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Login successful";  // untranslated
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "This user already belongs to the group";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "The link is not valid anymore. Please ask for resetting your password again, if you still cannot remember it!";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »roberta-zentrale@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "User was not found";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "The user with which you would like to share the program does not exist. <br />Try it again!";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "You cannot share any programs with yourself.";  // untranslated
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Your password has been successfully changed!";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
<<<<<<< HEAD
<<<<<<< HEAD
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";
Blockly.Msg.PIN_PULL = "pull";  // untranslated
Blockly.Msg.PIN_PULL_DOWN = "down";  // untranslated
Blockly.Msg.PIN_PULL_NONE = "none";  // untranslated
Blockly.Msg.PIN_PULL_UP = "up";  // untranslated
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Sets the pull of the chosen pin";  // untranslated
Blockly.Msg.PIN_WRITE = "write";
Blockly.Msg.PITCH = "pitch";
Blockly.Msg.PLAY = "play";
Blockly.Msg.PLAY_DURATION = "duration ms";
Blockly.Msg.PLAY_EIGHTH = "eighth note";
Blockly.Msg.PLAY_FILE = "file";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Plays a sound file.";
Blockly.Msg.PLAY_FREQUENZ = "frequency Hz";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Gets current volume.";
Blockly.Msg.PLAY_HALF = "half note";
=======
=======
Blockly.Msg.OUTPUT = "output";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.PIN_GETSAMPLE_ANALOG_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_DIGITAL_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_PULSEHIGH_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.PIN_GETSAMPLE_PULSELOW_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_WRITE = "write";  // untranslated
Blockly.Msg.PITCH = "pitch";  // untranslated
Blockly.Msg.PLAY = "play";  // untranslated
Blockly.Msg.PLAY_DURATION = "duration ms";  // untranslated
Blockly.Msg.PLAY_EIGHTH = "eighth note";  // untranslated
Blockly.Msg.PLAY_FILE = "file";  // untranslated
Blockly.Msg.PLAY_FILE_TOOLTIP = "Plays a sound file.";  // untranslated
Blockly.Msg.PLAY_FREQUENZ = "frequency Hz";  // untranslated
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Gets current volume.";  // untranslated
Blockly.Msg.PLAY_HALF = "half note";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.PLAY_NOTE = "note";  // untranslated
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Plays a music note";  // untranslated
Blockly.Msg.PLAY_QUARTER = "quarter note";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Sets volume.";  // untranslated
Blockly.Msg.PLAY_SIXTEENTH = "sixteenth note";  // untranslated
Blockly.Msg.PLAY_TONE = "tone";  // untranslated
<<<<<<< HEAD
Blockly.Msg.PLAY_TONE_TOOLTIP = "Plays a tone.";
Blockly.Msg.PLAY_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "volume";
Blockly.Msg.PLAY_WHOLE = "whole note";
Blockly.Msg.POPUP_ABOUT_JOIN = "I want to help";
Blockly.Msg.POPUP_ABOUT_TEXT = "The Open Roberta Lab is a cloud-based integrated programming environment that enables children and adolescents to program easily different robot/microcontroller systems. This platform is completely open source so taking part is desirable! Both the software and the open source developer tools are available via Fraunhofer servers.";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "The Open Roberta Lab is an open-source programming platform developed by Fraunhofer IAIS within the initiative <a href=\"http://www.roberta-home.de/\" target=\"_blank\">»Roberta – Learning with Robots«</a>";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta was initiated in collaboration with Google Germany to reduce the hurdles for students, teachers and schools programming educational robots.</a>";
Blockly.Msg.POPUP_AGE = "Age";
Blockly.Msg.POPUP_ATTENTION = "Attention";
Blockly.Msg.POPUP_BEFOREUNLOAD = "You have unsaved changes in your program or configuration. Sign in and save your program or configuration.";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "You have unsaved changes in your program or configuration.";
Blockly.Msg.POPUP_CANCEL = "Cancel";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "change password ...";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Press »OK« to discard your work. Press »Cancel« to stay here and save your work first.</i>";
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Do you really want to delete the configuration ?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Do you really want to delete these groups?";
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Do you really want to delete the following program or programs?<br>If you delete a shared program, you do not delete the program but the sharing.<br><br>If you delete a program with the owner »Gallery«, you remove your program from the gallery!";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Do you really want to remove these users below from the current group?";
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "There is a new firmware version for your robot available. You can try to run programs with the old version, but best bet is to update your robot now! You just have to click »Update now«.";
Blockly.Msg.POPUP_CONTINUE = "continue anyway";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I\"ve changed the download folder of my browser permanently. Don\"t show this popup again and download my programs directly.";
Blockly.Msg.POPUP_DOWNLOAD_SAVE = "Save";
Blockly.Msg.POPUP_DOWNLOAD_SAVE_AS = "Save link as ...";
Blockly.Msg.POPUP_DOWNLOAD_STEP_A = "Right click on your program link below and";
Blockly.Msg.POPUP_DOWNLOAD_STEP_B = "choose »Save link as ...«, then";
Blockly.Msg.POPUP_DOWNLOAD_STEP_C = "click on your connected »$« in the left column,";
Blockly.Msg.POPUP_DOWNLOAD_STEP_D = "now click on the »Save« button on the bottom right.<br><span style=\"font-size: 14px;\">If your program doesn\"t start automatically press the reset button after a while.</span>";
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Update now";
Blockly.Msg.POPUP_EMAIL = "E-Mail";
Blockly.Msg.POPUP_EMAIL_SEND = "Send now";
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don\"t change it, it probably won\"t work anymore. It\"s already copied to your clipboard!</br>$";
Blockly.Msg.POPUP_NAME = "Name";
Blockly.Msg.POPUP_NEW_PASSWORD = "New Password";
Blockly.Msg.POPUP_OLD_PASSWORD = "Old Password";
Blockly.Msg.POPUP_PASSWORD = "Password";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "reset password ...";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "The execution of the program on the robot has terminated unexpectedly!";
Blockly.Msg.POPUP_REGISTER_USER = "Register now";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Repeat password";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Voltage";
Blockly.Msg.POPUP_ROBOT_NAME = "Name";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "You have to make a connection to your robot first.";
Blockly.Msg.POPUP_ROBOT_STATE = "State";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "busy";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "disconnected";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "wait";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "System";
Blockly.Msg.POPUP_ROBOT_WAIT = "Waiting time";
Blockly.Msg.POPUP_STARTUP_COOKIES = "We use cookies to personalise content and to analyse our traffic.";
Blockly.Msg.POPUP_STARTUP_HELP = "Do you need help?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";
Blockly.Msg.POPUP_STARTUP_HIDE = "Okay, don\"t show this window again and remember my choice.";
Blockly.Msg.POPUP_STARTUP_START = "Choose your system!";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";
Blockly.Msg.POPUP_TOUR = "take a tour";
Blockly.Msg.POPUP_USERNAME = "Username";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "You are not logged in.";
Blockly.Msg.POPUP_VALUE = "Value";
Blockly.Msg.PORT_ANKLE = "ankle";  // untranslated
Blockly.Msg.PORT_BUMPER = "bumper";  // untranslated
Blockly.Msg.PORT_ELBOW = "elbow";  // untranslated
Blockly.Msg.PORT_HAND = "hand";  // untranslated
Blockly.Msg.PORT_HEAD = "head";  // untranslated
Blockly.Msg.PORT_HIP = "hip";  // untranslated
Blockly.Msg.PORT_KNEE = "knee";  // untranslated
Blockly.Msg.PORT_SHOULDER = "schoulder";  // untranslated
Blockly.Msg.PORT_WRIST = "wrist";  // untranslated
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Represents a potentiometer .";  // untranslated
=======
Blockly.Msg.PLAY_TONE_TOOLTIP = "Plays a tone.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "volume";  // untranslated
Blockly.Msg.PLAY_WHOLE = "whole note";  // untranslated
Blockly.Msg.POPUP_ABOUT_JOIN = "I want to help";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT = "The Open Roberta Lab is a cloud-based integrated programming environment that enables children and adolescents to program easily different robot/microcontroller systems. This platform is completely open source so taking part is desirable! Both the software and the open source developer tools are available via Fraunhofer servers.";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "The Open Roberta Lab is an open-source programming platform developed by Fraunhofer IAIS within the initiative <a href='http://www.roberta-home.de/' target='_blank'>»Roberta – Learning with Robots«</a>";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta was initiated in collaboration with Google Germany to reduce the hurdles for students, teachers and schools programming educational robots.</a>";  // untranslated
Blockly.Msg.POPUP_AGE = "Age";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "Attention";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD = "You have unsaved changes in your program or configuration. Sign in and save your program or configuration.";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "You have unsaved changes in your program or configuration.";  // untranslated
Blockly.Msg.POPUP_CANCEL = "Cancel";  // untranslated
Blockly.Msg.POPUP_CHANGE_PASSWORD = "change password ...";  // untranslated
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Press »OK« to discard your work. Press »Cancel« to stay here and save your work first.</i>";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Do you really want to delete the configuration ?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Do you really want to delete these groups?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Do you really want to delete the following program or programs?<br>If you delete a shared program, you do not delete the program but the sharing.<br><br>If you delete a program with the owner »Gallery«, you remove your program from the gallery!";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Do you really want to remove these users below from the current group?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "There is a new firmware version for your robot available. You can try to run programs with the old version, but best bet is to update your robot now! You just have to click »Update now«.";  // untranslated
Blockly.Msg.POPUP_CONTINUE = "continue anyway";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I've changed the download folder of my browser permanently. Don't show this popup again and download my programs directly.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_SAVE = "Save";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_SAVE_AS = "Save link as ...";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_A = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_B = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_C = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_D = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Update now";  // untranslated
Blockly.Msg.POPUP_EMAIL = "E-Mail";  // untranslated
Blockly.Msg.POPUP_EMAIL_SEND = "Send now";  // untranslated
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don't change it, it probably won't work anymore. It's already copied to your clipboard!</br>$";  // untranslated
Blockly.Msg.POPUP_NAME = "Name";  // untranslated
Blockly.Msg.POPUP_NEW_PASSWORD = "New Password";  // untranslated
Blockly.Msg.POPUP_OLD_PASSWORD = "Old Password";  // untranslated
Blockly.Msg.POPUP_PASSWORD = "Password";  // untranslated
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "reset password ...";  // untranslated
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "The execution of the program on the robot has terminated unexpectedly!";  // untranslated
Blockly.Msg.POPUP_REGISTER_USER = "Register now";  // untranslated
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Repeat password";  // untranslated
Blockly.Msg.POPUP_ROBOT_BATTERY = "Voltage";  // untranslated
Blockly.Msg.POPUP_ROBOT_NAME = "Name";  // untranslated
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "You have to make a connection to your robot first.";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE = "State";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "busy";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "disconnected";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "wait";  // untranslated
Blockly.Msg.POPUP_ROBOT_SYSTEM = "System";  // untranslated
Blockly.Msg.POPUP_ROBOT_WAIT = "Waiting time";  // untranslated
Blockly.Msg.POPUP_STARTUP_COOKIES = "We use cookies to personalise content and to analyse our traffic.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HELP = "Do you need help?";  // untranslated
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Okay, don't show this window again and remember my choice.";  // untranslated
Blockly.Msg.POPUP_STARTUP_START = "Choose your system!";  // untranslated
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";  // untranslated
Blockly.Msg.POPUP_TOUR = "take a tour";  // untranslated
Blockly.Msg.POPUP_USERNAME = "Username";  // untranslated
Blockly.Msg.POPUP_USERNAME_LOGOFF = "You are not logged in.";  // untranslated
Blockly.Msg.POPUP_VALUE = "Value";  // untranslated
<<<<<<< HEAD
>>>>>>> #745 added base Uno files, configuration draft
=======
Blockly.Msg.POTENTIOMETER = "potentiometer";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "tillat uttalelser";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Kjør den brukerdefinerte funksjonen '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Kjør den brukerdefinerte funksjonen'%1' og bruk resultatet av den.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Opprett '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "gjør noe";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "til";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Opprett en funksjon som ikke har noe resultat.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "returner";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Oppretter en funksjon som har et resultat.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advarsel: Denne funksjonen har duplikate parametere.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Marker funksjonsdefinisjonen";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Hvis en verdi er sann, returner da en annen verdi.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advarsel: Denne blokken kan bare benyttes innenfor en funksjonsdefinisjon.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Navn på parameter:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Legg til en input til funksjonen.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "parametere";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Legg til, fjern eller endre rekkefølgen på input til denne funksjonen.";
<<<<<<< HEAD
Blockly.Msg.PROCEDURES_TITLE = "« procedure";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the »";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Click here to delete your program.";
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Click here to share your program with a friend.";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Do you really want to share your program with everybody? If you are not sure please check the question and answers <a href=\"https://www.roberta-home.de/index.php?id=138&L=1\" target=\"_blank\">here</a>.";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Click here to upload your program to the gallery hence share it with all other users.";
Blockly.Msg.PULSE_HIGH = "pulse time HIGH";
Blockly.Msg.PULSE_LOW = "pulse time LOW";
Blockly.Msg.PULSE_TOOLTIP = "Represents a pulse sensor.";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Gets the RSSI of the last package.";
=======
Blockly.Msg.PROCEDURES_TITLE = "« procedure";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the »";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";  // untranslated
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Click here to delete your program.";  // untranslated
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Click here to share your program with a friend.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Do you really want to share your program with everybody? If you are not sure please check the question and answers <a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>here</a>.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Click here to upload your program to the gallery hence share it with all other users.";  // untranslated
Blockly.Msg.PULSE = "pulse";  // untranslated
Blockly.Msg.PULSE_HIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSE_LOW = "pulse time LOW";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Gets the RSSI of the last package.";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.RELAY = "relay";  // untranslated
<<<<<<< HEAD
Blockly.Msg.RELAY_TOOLTIP = "Represents a relay.";  // untranslated
=======
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.REMOVE_COMMENT = "Fjern kommentar";
Blockly.Msg.RENAME_VARIABLE = "Gi nytt navn til variabel...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Endre navnet til alle '%1' variabler til:";
<<<<<<< HEAD
Blockly.Msg.RESEND_ACTIVATION = "resend verification email";
Blockly.Msg.RETURN = "return";
Blockly.Msg.RFID_TOOLTIP = "Represents an RFID reader.";  // untranslated
Blockly.Msg.RGBLED_TOOLTIP = "Represents an RGB LED.";  // untranslated
=======
Blockly.Msg.RESEND_ACTIVATION = "resend verification email";  // untranslated
Blockly.Msg.RETURN = "return";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.RIGHT = "right";  // untranslated
Blockly.Msg.ROLL = "roll";  // untranslated
Blockly.Msg.SEND_DATA = "data to send";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER = "accelerometer";  // untranslated
<<<<<<< HEAD
Blockly.Msg.SENSOR_AMBIENTLIGHT = "ambientlight sensor";
Blockly.Msg.SENSOR_ANY = "anyplace";
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Returns true, if the selected part of the arm is touched, otherwise false.";
Blockly.Msg.SENSOR_BATTERY = "voltage in V";
Blockly.Msg.SENSOR_BOTTOM = "bottom";
Blockly.Msg.SENSOR_CALIBRATE = "calibrate";  // untranslated
Blockly.Msg.SENSOR_CODE = "code pad";
Blockly.Msg.SENSOR_COLOUR = "colour sensor";
Blockly.Msg.SENSOR_COMPASS = "compass sensor";
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT compass sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE = "face detector";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Returns one or an array of IDs (number) of the last detected NAO Mark(s). If no marks are detected, -1 or an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.SENSOR_DROP = "drop sensor";  // untranslated
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gets the current reading from the drop sensor.";  // untranslated
Blockly.Msg.SENSOR_DROP_OFF = "drop-off sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT = "current sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "encoder";
Blockly.Msg.SENSOR_FLAME = "flame sensor";
Blockly.Msg.SENSOR_FSR = "force-sensing resistor";  // untranslated
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesture";
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "active?";
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";
=======
Blockly.Msg.SENSOR_AMBIENTLIGHT = "ambientlight sensor";  // untranslated
Blockly.Msg.SENSOR_ANY = "anyplace";  // untranslated
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Returns true, if the selected part of the arm is touched, otherwise false.";  // untranslated
Blockly.Msg.SENSOR_BATTERY = "battery charge";  // untranslated
Blockly.Msg.SENSOR_BOTTOM = "bottom";  // untranslated
Blockly.Msg.SENSOR_CODE = "code pad";  // untranslated
Blockly.Msg.SENSOR_COLOUR = "colour sensor";  // untranslated
Blockly.Msg.SENSOR_COMPASS = "compass sensor";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "encoder";  // untranslated
Blockly.Msg.SENSOR_FLAME = "flame sensor";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesture";  // untranslated
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "active?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face up.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Returns »true« if it is free falling.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Returns »true« if it is shaken.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Is the system in the selected state?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is upright.";  // untranslated
<<<<<<< HEAD
Blockly.Msg.SENSOR_GET = "get";
Blockly.Msg.SENSOR_GET_SAMPLE = "get value";
Blockly.Msg.SENSOR_GROVE = "Grove";
Blockly.Msg.SENSOR_GYRO = "gyroscope";
Blockly.Msg.SENSOR_HUMIDITY = "humidity sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Gets the current reading from the humidity sensor.";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "infrared sensor";
Blockly.Msg.SENSOR_IRSEEKER = "HT infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gets the position of an infrared beacon.";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "is arm";
Blockly.Msg.SENSOR_IS_PIN = "is";
Blockly.Msg.SENSOR_IS_PRESSED = "pressed?";
Blockly.Msg.SENSOR_IS_TOUCHED = "touched?";
Blockly.Msg.SENSOR_JOYSTICK = "joystick";
Blockly.Msg.SENSOR_KEY = "button";
Blockly.Msg.SENSOR_KEY_ANY = "any";
Blockly.Msg.SENSOR_KEY_DOWN = "down";
Blockly.Msg.SENSOR_KEY_ENTER = "enter";
Blockly.Msg.SENSOR_KEY_ESCAPE = "escape";
Blockly.Msg.SENSOR_KEY_LEFT = "left";
Blockly.Msg.SENSOR_KEY_RIGHT = "right";
Blockly.Msg.SENSOR_KEY_UP = "up";
Blockly.Msg.SENSOR_LIGHT = "light sensor";
Blockly.Msg.SENSOR_MIC = "microphone";
Blockly.Msg.SENSOR_MOISTURE = "moisture sensor";  // untranslated
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the moisture sensor.";  // untranslated
Blockly.Msg.SENSOR_MOTION = "motion sensor";  // untranslated
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Gets the current reading from the motion sensor.";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "in ms";
Blockly.Msg.SENSOR_PIN = "pin";
Blockly.Msg.SENSOR_PINTOUCH = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSE_HIGH_GETSAMPLE_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSE_LOW_GETSAMPLE_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER = "potentiometer";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gets the current reading from the potentiometer.";  // untranslated
Blockly.Msg.SENSOR_PRESSED = " (pressed)";
Blockly.Msg.SENSOR_PULSE = "pulse sensor";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gets the current reading from the pulse sensor.";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "radio RSSI sensor";
Blockly.Msg.SENSOR_RESET = "reset";
=======
Blockly.Msg.SENSOR_GET = "get";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "get value";  // untranslated
Blockly.Msg.SENSOR_GROVE = "Grove";  // untranslated
Blockly.Msg.SENSOR_GYRO = "gyroscope";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "is arm";  // untranslated
Blockly.Msg.SENSOR_IS_PIN = "is";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "pressed?";  // untranslated
Blockly.Msg.SENSOR_IS_TOUCHED = "touched?";  // untranslated
Blockly.Msg.SENSOR_JOYSTICK = "joystick";  // untranslated
Blockly.Msg.SENSOR_KEY = "button";  // untranslated
Blockly.Msg.SENSOR_KEY_ANY = "any";  // untranslated
Blockly.Msg.SENSOR_KEY_DOWN = "down";  // untranslated
Blockly.Msg.SENSOR_KEY_ENTER = "enter";  // untranslated
Blockly.Msg.SENSOR_KEY_ESCAPE = "escape";  // untranslated
Blockly.Msg.SENSOR_KEY_LEFT = "left";  // untranslated
Blockly.Msg.SENSOR_KEY_RIGHT = "right";  // untranslated
Blockly.Msg.SENSOR_KEY_UP = "up";  // untranslated
Blockly.Msg.SENSOR_LIGHT = "light sensor";  // untranslated
Blockly.Msg.SENSOR_MIC = "microphone";  // untranslated
Blockly.Msg.SENSOR_MOISTURE = "moisture sensor";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "in ms";  // untranslated
Blockly.Msg.SENSOR_PIN = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH = "pin";  // untranslated
Blockly.Msg.SENSOR_PRESSED = " (pressed)";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "radio RSSI sensor";  // untranslated
Blockly.Msg.SENSOR_RESET = "reset";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_RFID = "RFID reader";  // untranslated
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gets the current reading from the RFID reader.";  // untranslated
Blockly.Msg.SENSOR_RSSI = "signal strength";  // untranslated
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gets the signal strength from the last received message.";  // untranslated
Blockly.Msg.SENSOR_SONAR = "sonar";  // untranslated
Blockly.Msg.SENSOR_SOUND = "sound sensor";  // untranslated
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "microphone";  // untranslated
<<<<<<< HEAD
Blockly.Msg.SENSOR_TEMPERATURE = "temperature sensor";
Blockly.Msg.SENSOR_TIME = "time";
Blockly.Msg.SENSOR_TIMER = "timer";
Blockly.Msg.SENSOR_TOP = "top";
Blockly.Msg.SENSOR_TOUCH = "touch sensor";
Blockly.Msg.SENSOR_ULTRASONIC = "ultrasonic sensor";
<<<<<<< HEAD
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s²";  // untranslated
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";  // untranslated
=======
=======
Blockly.Msg.SENSOR_TEMPERATURE = "temperature sensor";  // untranslated
Blockly.Msg.SENSOR_TIME = "time";  // untranslated
Blockly.Msg.SENSOR_TIMER = "timer";  // untranslated
Blockly.Msg.SENSOR_TOP = "top";  // untranslated
Blockly.Msg.SENSOR_TOUCH = "touch sensor";  // untranslated
Blockly.Msg.SENSOR_TOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC = "ultrasonic sensor";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.SENSOR_UNIT_CM = "cm";  // untranslated
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";  // untranslated
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";  // untranslated
Blockly.Msg.SENSOR_UNIT_MM = "mm";  // untranslated
Blockly.Msg.SENSOR_UNIT_MS = "ms";  // untranslated
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";  // untranslated
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";  // untranslated
Blockly.Msg.SENSOR_UNIT_VOLT = "V";  // untranslated
<<<<<<< HEAD
Blockly.Msg.SENSOR_VALUE = "value";
Blockly.Msg.SENSOR_WALL = "wall sensor";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "The Open Roberta Lab is currently not available. </br>Your internet connection was interrupted. If you currently have an EV3 connected via the USB cable solve this with a click on the programming environment.<br>If this problem persists please check your internet connection and try to reload this website. If you have this problem again, please don\"t hesitate to contact us via mail:</br>roberta-zentrale@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
Blockly.Msg.SERVO_TOOLTIP = "Represents a servo motor.";  // untranslated
Blockly.Msg.SET = "set";
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
Blockly.Msg.SET_LED = "turn LED";
Blockly.Msg.SIDE_BRUSH_OFF = "Turn Side Brush Off";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Turn the side brush off.";  // untranslated
Blockly.Msg.SIDE_BRUSH_STATUS = "Side Brush";  // untranslated
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Turn on/off the side brush.";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Unfortunately you can not use this block in the simulation!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "This sensor is not in the configuration! The behavior of the program on the real robot will be different than expected!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "The infrared sensor is not connected in the configuration! The behavior of the program on the real robot will be different than expected, please check the robot configuration!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "In this block you have used a wrong sensor port! The behavior of the program on the real robot will be different than expected, please check the robot configuration!";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Turns the single motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.SLEEP = "sleep";
Blockly.Msg.SLOT_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_LEFT_PITCH = "left pitch";  // untranslated
Blockly.Msg.SLOT_LEFT_ROLL = "left roll";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW = "left yaw";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "left yaw pitch";  // untranslated
Blockly.Msg.SLOT_MIDDLE = "middle";  // untranslated
Blockly.Msg.SLOT_PITCH = "pitch";  // untranslated
Blockly.Msg.SLOT_REAR = "rear";  // untranslated
Blockly.Msg.SLOT_RIGHT_PITCH = "right pitch";  // untranslated
Blockly.Msg.SLOT_RIGHT_ROLL = "right roll";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW = "right yaw";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "right yaw pitch";  // untranslated
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_YAW = "yaw";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor.";
Blockly.Msg.SOUND_TOOLTIP = "Represents a sound sensor.";
Blockly.Msg.START = "start";
Blockly.Msg.START_ACTIVITY = "activity";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Starts additional activity.";
Blockly.Msg.START_PROGRAM = "start";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "autonomous behaviour";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "show sensor data";
Blockly.Msg.START_TOOLTIP = "The starting point for the main program.";
Blockly.Msg.STEPMOTOR_TOOLTIP = "Represents a step motor.";  // untranslated
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STRENGTH = "strength";
Blockly.Msg.TAB_CONFIGURATION = "Robot configuration";
Blockly.Msg.TAB_PROGRAM = "Program";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperatur sensor.";
Blockly.Msg.TEMPERATURE_TOOLTIP = "Represents a temperature sensor.";  // untranslated
=======
Blockly.Msg.SENSOR_VALUE = "value";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "The Open Roberta Lab is currently not available. </br>Your internet connection was interrupted. If you currently have an EV3 connected via the USB cable solve this with a click on the programming environment.<br>If this problem persists please check your internet connection and try to reload this website. If you have this problem again, please don't hesitate to contact us via mail:</br>roberta-zentrale@iais.fraunhofer.de";  // untranslated
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
Blockly.Msg.SET = "set";  // untranslated
Blockly.Msg.SET_LED = "turn LED";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Unfortunately you can not use this block in the simulation!";  // untranslated
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "This sensor is not in the configuration! The behavior of the program on the real robot will be different than expected!";  // untranslated
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "The infrared sensor is not connected in the configuration! The behavior of the program on the real robot will be different than expected, please check the robot configuration!";  // untranslated
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "In this block you have used a wrong sensor port! The behavior of the program on the real robot will be different than expected, please check the robot configuration!";  // untranslated
Blockly.Msg.SLEEP = "sleep";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor.";  // untranslated
Blockly.Msg.SOUND_TOOLTIP = "Represents a sound sensor.";  // untranslated
Blockly.Msg.START = "start";  // untranslated
Blockly.Msg.START_ACTIVITY = "activity";  // untranslated
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Starts additional activity.";  // untranslated
Blockly.Msg.START_PROGRAM = "start";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "show sensor data";  // untranslated
Blockly.Msg.START_TOOLTIP = "The starting point for the main program.";  // untranslated
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STRENGTH = "strength";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Robot configuration";  // untranslated
Blockly.Msg.TAB_PROGRAM = "Program";  // untranslated
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperatur sensor.";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "tilføy tekst";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "til";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Tilføy tekst til variabelen '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "til små bokstaver";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "til store forbokstaver";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "til STORE BOKSTAVER";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Returnerer en kopi av teksten der store og små bokstaver er byttet om.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hent første bokstav";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hent bokstav # fra slutten";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hent bokstav #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "i tekst";
Blockly.Msg.TEXT_CHARAT_LAST = "hent den siste bokstaven";
Blockly.Msg.TEXT_CHARAT_RANDOM = "hent en tilfeldig bokstav";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returnerer bokstaven på angitt plassering.";
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Write a comment to your code here, to make it easier for you and others to read and understand your code. It will also generate an inline comment in the generated source code";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Legg til et element til teksten.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "føy sammen";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Legg til, fjern eller forandre rekkefølgen for å forandre på denne tekstblokken.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "til bokstav # fra slutten";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "til bokstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "til siste bokstav";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "i tekst";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "hent delstreng fra første bokstav";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "hent delstreng fra bokstav # fra slutten";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "hent delstreng fra bokstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returnerer den angitte delen av teksten.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "i tekst";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "finn første forekomst av tekst";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "finn siste forekomst av tekst";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returnerer posisjonen for første/siste forekomsten av den første tekst i den andre teksten.  Returnerer -1 hvis teksten ikke blir funnet.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnerer sann hvis den angitte teksten er tom.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "lage tekst med";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Opprett en tekst ved å sette sammen et antall elementer.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "lengden av %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returnerer antall bokstaver (inkludert mellomrom) i den angitte teksten.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "skriv ut %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Skriv ut angitt tekst, tall eller annet innhold.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Be brukeren om et tall.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Spør brukeren om tekst.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "spør om et tall med en melding";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "spør om tekst med en melding";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "En bokstav, ett ord eller en linje med tekst.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "fjern mellomrom fra begge sider av";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "fjern mellomrom fra venstre side av";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "fjern mellomrom fra høyre side av";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Returner en kopi av teksten med mellomrom fjernet fra en eller begge sidene.";
Blockly.Msg.THETA = "theta";  // untranslated
Blockly.Msg.TIMEOUT = "timeout";  // untranslated
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "Resets the timer.";  // untranslated
Blockly.Msg.TODAY = "I dag";
Blockly.Msg.TOOLBOX_ACTION = "Action";  // untranslated
Blockly.Msg.TOOLBOX_ANIMATION = "Animation";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Colours";  // untranslated
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";  // untranslated
Blockly.Msg.TOOLBOX_CONTROL = "Control";  // untranslated
Blockly.Msg.TOOLBOX_DECISION = "Decisions";  // untranslated
Blockly.Msg.TOOLBOX_DISPLAY = "Display";  // untranslated
Blockly.Msg.TOOLBOX_DRIVE = "Drive";  // untranslated
Blockly.Msg.TOOLBOX_IMAGE = "Images";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Lights";  // untranslated
Blockly.Msg.TOOLBOX_LIST = "Lists";  // untranslated
Blockly.Msg.TOOLBOX_LOGIC = "Logic";  // untranslated
Blockly.Msg.TOOLBOX_LOOP = "Loops";  // untranslated
Blockly.Msg.TOOLBOX_MATH = "Math";  // untranslated
Blockly.Msg.TOOLBOX_MOVE = "Move";  // untranslated
Blockly.Msg.TOOLBOX_PIN = "Pin";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";  // untranslated
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";  // untranslated
Blockly.Msg.TOOLBOX_SOUND = "Sounds";  // untranslated
Blockly.Msg.TOOLBOX_TEXT = "Text";  // untranslated
Blockly.Msg.TOOLBOX_VARIABLE = "Variables";  // untranslated
Blockly.Msg.TOOLBOX_VISION = "Vision";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Wait";  // untranslated
Blockly.Msg.TOOLBOX_WALK = "Walk";  // untranslated
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION00 = "next";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION01 = "Welcome,<br>click on  »next« and start a tour through the Open Roberta Lab.<br>I'll show you how you can program your robot with NEPO.<br>You can end this tour all the time with a click on »X« in the right upper corner.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION02 = "The menu ;-)";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION03 = "Here you can find everything you need to program the robot!<br><span class='typcn typcn-document-text'></span> Save and load programs<br><span class='typcn typcn-ev3'></span> Connect your robot to the Open Roberta Lab or switch to another system<br><span class='typcn typcn-lightbulb'></span> Help for all kinds of problems<br><span class='typcn typcn-user'></span>Everything about user accounts, e.g. login or logoff<br><span class='typcn typcn-th-large-outline'></span> Look at the gallery and try great programs from other users!<br><span class='typcn typcn-world'></span> Click here to switch to another language";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION04 = "Click here and switch to the robot configuration";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION05 = "You can adapt the robot configuration later,<br>if you've constructed another robot.<br>If you don't have a robot and want to test your program in the simulation <br>this configuration is applied.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION06 = "Click here and switch back to the programming area!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION07 = "The toolbox.<br>Here you can find all programming blocks.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION07a = "Once you are an experienced user you can switch here to the expert mode of the toolbox.<br>You will then find more blocks to program your robot.<br><span class='typcn typcn-media-stop-outline'></span> beginner mode<br><span class='typcn typcn-star-outline'></span> expert mode";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION08 = "Each program starts with the »program start« block.<br>Further programming blocks, which the robot should execute, should be attached to this block.<br>Just drag'n drop the desired block right under the start block.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION09 = "Here you find some shortcuts!<br>From left to right:<br><span class='typcn typcn-media-play'></span> Click here to execute the program on the real robot<br><span class='typcn typcn-cloud-storage'></span> Save your program, but before that you need to sign in<br><span class='typcn typcn-zoom'></span> Click here and zoom in on the blocks, if you want to<br><span class='typcn typcn-archive'></span> The trashcan! Just move blocks into the trashcan and they will be deleted.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attention: You cannot recover blocks once they are deleted!<br>";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION10 = "Click on »Action«";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION12 = "Now drag'n drop the new block just below the start-program-block so that they are connected";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION13 = "Now open the simulation ...";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION13a = "and test your program in the simulation!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION15 = "Perfect,<br>your robot is driving 20 cm forward,<br>this is what you have programmed!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION16 = "Bye and have fun trying out more!";  // untranslated
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 255 cm.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "Represents an ultrasonic sensor.";  // untranslated
Blockly.Msg.UNDO = "Undo";  // untranslated
<<<<<<< HEAD
Blockly.Msg.VACUUM_OFF = "Turn Vacuum Off";  // untranslated
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Turn the vacuum off.";  // untranslated
Blockly.Msg.VACUUM_ON = "Turn Vacuum On (%)";  // untranslated
Blockly.Msg.VACUUM_ON_TOOLTIP = "Turns on the vacuum speed in procent";  // untranslated
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Valid special characters: »=+!?.,%#+&^@_-«";
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "This field cannot be empty!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "The max. lenght is 25 characters!";
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Password min. length is 6!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "The two passwords must be equal!";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Token length is 8 characters!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Please enter a valid email address!";
Blockly.Msg.VALUE_TO = "value to";
=======
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Valid special characters: »=+!?.,%#+&^@_-«";  // untranslated
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "This field cannot be empty!";  // untranslated
Blockly.Msg.VALIDATION_MAX_LENGTH = "The max. lenght is 25 characters!";  // untranslated
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Password min. length is 6!";  // untranslated
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "The two passwords must be equal!";  // untranslated
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Token length is 8 characters!";  // untranslated
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Please enter a valid email address!";  // untranslated
Blockly.Msg.VALUE_TO = "value to";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Opprett 'sett %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnerer verdien av denne variabelen.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Declares a global variable.";  // untranslated
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Declares a local variable.";  // untranslated
Blockly.Msg.VARIABLES_SET = "sett %1 til %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Opprett 'hent %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Setter verdien av denne variablen lik parameteren.";
Blockly.Msg.VARIABLES_TITLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "List Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "String";  // untranslated
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "The variable is used before declaration.";  // untranslated
Blockly.Msg.WAIT = "wait ms";  // untranslated
Blockly.Msg.WAIT_FOR_TOOLTIP = "Waits for sensor values.";  // untranslated
Blockly.Msg.WAIT_OR = "or wait for";  // untranslated
Blockly.Msg.WAIT_TIME_TOOLTIP = "Waits for a certain time in milliseconds.";  // untranslated
Blockly.Msg.WAIT_TOOLTIP = "Waits for a condition becoming true.";  // untranslated
Blockly.Msg.WAIT_UNTIL = "wait until";  // untranslated
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Sends the value to chosen pin.";  // untranslated
Blockly.Msg.X = "x";  // untranslated
Blockly.Msg.Y = "y";  // untranslated
Blockly.Msg.YAW = "yaw";  // untranslated
<<<<<<< HEAD
Blockly.Msg.YES = "yes";
Blockly.Msg.YOUNGER_THEN_14 = "I am younger than 16!";
Blockly.Msg.Z = "z";  // untranslated
=======
Blockly.Msg.YES = "yes";  // untranslated
Blockly.Msg.YOUNGER_THEN_14 = "I am younger than 16!";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;