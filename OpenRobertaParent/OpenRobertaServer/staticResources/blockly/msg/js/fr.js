// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.fr');

goog.require('Blockly.Msg');

Blockly.Msg.ABOUT = "about";  // untranslated
Blockly.Msg.ACCELERATION_TOOLTIP = "Get the acceleration value in milli-gravitys.";  // untranslated
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACTION_LCD = "LCD";  // untranslated
Blockly.Msg.ACTION_LCDI2C = "LCD";  // untranslated
Blockly.Msg.ACTION_LED = "LED";  // untranslated
Blockly.Msg.ACTION_PLAY = "play";  // untranslated
Blockly.Msg.ACTION_RELAY = "relay";  // untranslated
Blockly.Msg.ACTION_RGBLED = "RGB LED";  // untranslated
Blockly.Msg.ACTION_SERVO = "servo motor";  // untranslated
Blockly.Msg.ACTION_STEPMOTOR = "step motor";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "ajouter blocs";
Blockly.Msg.ACTOR_TOOLTIP = "autres activités";
Blockly.Msg.ADD_COMMENT = "Ajouter un commentaire";
Blockly.Msg.ANALOG = "analog";  // untranslated
Blockly.Msg.AND = "and";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Represents the Bot'n Roll board with connected actors and sensors. There are also inbuilt actors and sensors available, e.g. pushbuttons, display ...";  // untranslated
Blockly.Msg.AUTH = "Veuillez autoriser cette application à permettre la sauvegarde de votre travail et à l’autoriser d'être partagé par vous.";
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Récupère le voltage actuel de la batterie.";
Blockly.Msg.BLOCK_NOT_EXECUTED = "The exection of this block will have no effect!";  // untranslated
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Returns the previously stored number.";  // untranslated
Blockly.Msg.BOB3_RECALL_NUMBER = "recall number";  // untranslated
Blockly.Msg.BOB3_REMEMBER_NUMBER = "remember number";  // untranslated
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "The number to store should be an integer in the range of 0 to 255";  // untranslated
Blockly.Msg.BOTH = "both";  // untranslated
Blockly.Msg.BRICKLIGHT = "lumière du EV3";
Blockly.Msg.BRICKLIGHT_BLUE = "lumière bleue";
Blockly.Msg.BRICKLIGHT_COLOR = "couleur";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "clignotement double";
Blockly.Msg.BRICKLIGHT_FLASH = "clignote";
Blockly.Msg.BRICKLIGHT_GREEN = "vert";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "éteind la lumière du EV3";
Blockly.Msg.BRICKLIGHT_ON = "allumée";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "allume la lumière du EV3";
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";
Blockly.Msg.BRICKLIGHT_RED = "rouge";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Réinitialisation de l'ampoule de la brique EV3. Définit la valeur par défaut de l'ampoule de la brique EV3 à clignotement vert";
Blockly.Msg.BRICK_IPADDRESS = "ip address";  // untranslated
Blockly.Msg.BRICK_PASSWORD = "password";  // untranslated
Blockly.Msg.BRICK_PORT = "port";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "écartement entre les roues";
Blockly.Msg.BRICK_USERNAME = "user name";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "diamètre des roues";
Blockly.Msg.BRUSH_OFF = "Turn Brush Off";  // untranslated
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Turn the brush off.";  // untranslated
Blockly.Msg.BRUSH_ON = "Turn Brush On (RPM)";  // untranslated
Blockly.Msg.BRUSH_ON_TOOLTIP = "Turns on the brush with RPM of the motor (0<=RPM<=10000)";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Diviser";
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Upload »$« to the gallery";  // untranslated
Blockly.Msg.BUTTON_EMPTY_LIST = "Vider la liste";
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Represents Calliope, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.CENTER = "center";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifier la valeur :";
Blockly.Msg.CHAT = "Discutez avec votre collaborateur en tapant dans cette zone !";
Blockly.Msg.CLEAN_UP = "Nettoyer les blocs";
Blockly.Msg.COLLAPSE_ALL = "Réduire les blocs";
Blockly.Msg.COLLAPSE_BLOCK = "Réduire le bloc";
Blockly.Msg.COLON = "colon";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "couleur 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "couleur 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "taux";
Blockly.Msg.COLOUR_BLEND_TITLE = "mélanger";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mélange deux couleurs dans une proportion donnée (de 0.0 à 1.0).";
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Obtient la valeur actuelle du capteur de couleur.";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choisir une couleur dans la palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "couleur aléatoire";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choisir une couleur au hasard.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GREEN = "vert";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rouge";
Blockly.Msg.COLOUR_RGB_TITLE = "colorier avec";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Créer une couleur avec la quantité spécifiée de rouge, vert et bleu. Les valeurs doivent être comprises entre 0 et 100.";
Blockly.Msg.COLOUR_RGB_WHITE = "white";  // untranslated
Blockly.Msg.COLOUR_TOOLTIP = "Bloc représentant le capteur de couleur EV3.";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Calibrates the compass. Turn the compass sensor VERY slowly for two times (about 40 seconds).";  // untranslated
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Represents a compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Represents a HiTechnic NXT compass sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "The direction of rotation of the left and right motor is different!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Le moteur gauche est manquant dans la configuration du robot !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "La régulation du moteur gauche est inactive !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Pas de moteur connecté dans la configuration du robot !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Le moteur droit est manquant dans la configuration du robot !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Right motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "You have multiple left motors assigned to your configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "You have multiple right motors assigned to your configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Other power consumer does not support this type of block!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "Le capteur n'est pas connecté à ce port !";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Un autre capteur est branché à ce port !";
Blockly.Msg.CONFIGURATION_NO_PORT = "no port";  // untranslated
Blockly.Msg.CONFIGURATION_PORT = "Port1";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Click here to delete your robot configuration.";  // untranslated
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.CONNECTION_BOB3_RECEIVE_TOOLTIP = "Reads a message via the IR receiver. Only numbers can be received.";  // untranslated
Blockly.Msg.CONNECTION_BOB3_SEND_TOOLTIP = "Sends a message of type number to another Bob3. Hold the Bob3's face to face!";  // untranslated
Blockly.Msg.CONNECTION_CHECK = "La connexion au robot, est-elle active à %1?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Tester si la connexion au robot est active.";
Blockly.Msg.CONNECTION_CONNECT = "Connection avec le robot nommé ...";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "from connection";  // untranslated
Blockly.Msg.CONNECTION_FROM_ROBOT = "du robot";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Reads a message over one of the channels (0 - 255). The default channel is 0.";  // untranslated
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Sends a message to another system. You can specify a signal strength from 0 - 7, where 0 is very low and 7 is the strongests. The message is send over channel 0 unless you specify another one.";  // untranslated
Blockly.Msg.CONNECTION_OVER_CHANNEL = "sur le canal";
Blockly.Msg.CONNECTION_POWER = "with strength";  // untranslated
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";  // untranslated
Blockly.Msg.CONNECTION_RECEIVED_DATA = "réception de données";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Attends le message en provenance du robot défini pour la connexion.";
Blockly.Msg.CONNECTION_SEND_DATA = "données à envoyer";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Envoie un message à un autre robot";
Blockly.Msg.CONNECTION_SET_CHANNEL = "set channel to %1";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Sets the channel for sending and receiving messages. Can be set from 0 to 255.";  // untranslated
Blockly.Msg.CONNECTION_START_TOOLTIP = "Essaie de connexion Bluetooth avec un autre robot.";
Blockly.Msg.CONNECTION_TOOLTIP = "La connexion d'un robot";
Blockly.Msg.CONNECTION_TO_CONNECTION = "à la connexion";
Blockly.Msg.CONNECTION_TO_ROBOT = "au robot";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "attendre la connexion";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Attend la demande de connexion bluetooth.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "quitter la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "passer à l’itération de boucle suivante";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sortir de la boucle englobante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauter le reste de cette boucle, et poursuivre avec l’itération suivante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Attention : Ce bloc ne devrait être utilisé que dans une boucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pour chaque élément %1 dans la liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pour chaque élément d’une liste, assigner la valeur de l’élément à la variable '%1', puis exécuter des instructions.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "compter avec %1 de %2 à %3 par %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faire prendre à la variable « %1 » les valeurs depuis le nombre de début jusqu’au nombre de fin, en s’incrémentant du pas spécifié, et exécuter les instructions spécifiées.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ajouter une condition au bloc si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Ajouter une condition finale fourre-tout au bloc si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Ajouter, supprimer ou réordonner les sections pour reconfigurer ce bloc si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinon";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinon si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si une valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres. Si aucune des valeurs n’est vraie, exécuter le dernier bloc d’ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://fr.wikipedia.org/wiki/Boucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faire";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "répéter %1 fois";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Exécuter des instructions plusieurs fois.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "répéter jusqu’à";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "répéter tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Tant qu’une valeur est fausse, alors exécuter des instructions.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Tant qu’une valeur est vraie, alors exécuter des instructions.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Date de mise à jour";
Blockly.Msg.DATATABLE_CONFIGURATIONS = "configurations";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Nom de la configuration";
Blockly.Msg.DATATABLE_CREATED_BY = "Créé par";
Blockly.Msg.DATATABLE_CREATED_ON = "Créé le";
Blockly.Msg.DATATABLE_PROGRAMS = "programmes";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Nom du programme";
Blockly.Msg.DATATABLE_SHARED = "Shared";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Partager avec";
Blockly.Msg.DELETE_ALL_BLOCKS = "Supprimer ces %1 blocs ?";
Blockly.Msg.DELETE_BLOCK = "Supprimer le bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Supprimer %1 blocs";
Blockly.Msg.DIGITAL = "digital";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Désactiver le bloc";
Blockly.Msg.DISPLAY_ANIMATION = "animation";  // untranslated
Blockly.Msg.DISPLAY_CHARACTER = "character";  // untranslated
Blockly.Msg.DISPLAY_CLEAR = "effacer l'écran";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Efface l'affichage de l'écran.";
Blockly.Msg.DISPLAY_COL = "dans la colonne";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Returns the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Returns the brightness for this led. 0 means the led is turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_IMAGE = "image";  // untranslated
Blockly.Msg.DISPLAY_PICTURE = "image";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "yeux ouverts";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "yeux fermés";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "fleurs";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "lunettes";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "compteur de vitesse";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Affiche une image à l'écran.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "brightness";  // untranslated
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";  // untranslated
Blockly.Msg.DISPLAY_ROW = "dans la ligne";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Sets the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Sets the brightness for this led. 0 means the led is turned off, 9 is the brightest value. With x and y you can determine the position of the led you would like to change.";  // untranslated
Blockly.Msg.DISPLAY_SHOW = "montrer";
Blockly.Msg.DISPLAY_TEXT = "texte";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Montrer un texte à l'écran.";
Blockly.Msg.DROP_TOOLTIP = "Represents a drop sensor.";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Dupliquer";
Blockly.Msg.ENABLE_BLOCK = "Activer le bloc";
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Obtient la valeur actuelle du capteur de rotation";
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Initialise le capteur de rotation";
Blockly.Msg.ENCODER_TOOLTIP = "Represents an encoder.";  // untranslated
Blockly.Msg.ERROR_MISSING_PARAMETER = "An input value is missing!";  // untranslated
Blockly.Msg.ERROR_MISSING_RETURN = "The function return value is missing!";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "bloc pour le EV3";
Blockly.Msg.EXPAND_ALL = "Développer les blocs";
Blockly.Msg.EXPAND_BLOCK = "Développer le bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Entrées externes";
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Represents a flame sensor.";  // untranslated
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "You need a variable? Please declare it first with a click on the + sign at the »start« block.";  // untranslated
Blockly.Msg.FOR = "pour";
Blockly.Msg.FOURDIGITDISPLAY = "4-Digit Display";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Clears the Grove 4-Digit Display by Seeed.";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Displays a number [0-9999] on the Grove 4-Digit Display by Seeed. Position [0-3] represents the starting position of the number. The display has to be connected to the A1 (right) Grove connector.";  // untranslated
Blockly.Msg.FROM_POSITION = "from position";  // untranslated
Blockly.Msg.FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.GALLERY_BY = "by";  // untranslated
Blockly.Msg.GALLERY_DATE = "created";  // untranslated
Blockly.Msg.GALLERY_DISLIKE = "dislike";  // untranslated
Blockly.Msg.GALLERY_LIKE = "like";  // untranslated
Blockly.Msg.GALLERY_SHARED_ALREADY = "You have already uploaded this program to the gallery. If you want to change it, look for the copy from the gallery and modify it. You can also remove it from the gallery while deleting the copy from the gallery.";  // untranslated
Blockly.Msg.GET = "donne";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Donne la valeur du capteur actuellement sélectionné";
Blockly.Msg.GET_CODE_TOOLTIP = "Returns the value of the solderable code pad in the head piece. Values are in range 0-31.";  // untranslated
Blockly.Msg.GO_TO_GROUPS = "Go to groups";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "donne la valeur actuelle du capteur gyroscopique";
Blockly.Msg.GYRO_RESET_TOOLTIP = "initialise le capteur gyroscopique";
Blockly.Msg.GYRO_TOOLTIP = "bloc pour le capteur gyroscopique";
Blockly.Msg.HELP = "Aide";
Blockly.Msg.HINT_USER_ACCOUNT = "»IAmBotman« or »RobellaStracciatella«? Not everyone needs to know your real name. Think of a cool nickname that you can easily remember.";  // untranslated
Blockly.Msg.HINT_USER_AGE = "Are you under 16? Then please ask your parents to help you. They can specify their e-mail address to confirm your account.";  // untranslated
Blockly.Msg.HINT_USER_EMAIL = "This is voluntary! However, some functions of the lab are only available if you have verified your account by e-mail. You are younger than 16? Please ask your parents to help you out with one of their e-mail addresses. <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.HINT_USER_NAME = "Enter your real name here if you like. This is just for you, no one else will see it.";  // untranslated
Blockly.Msg.HINT_USER_PASSWORT = "12345 is no secure password. Rather think of a safe combination of numbers and letters that you will not forget.";  // untranslated
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Got it? Better make sure!";  // untranslated
<<<<<<< HEAD
<<<<<<< HEAD
Blockly.Msg.HUMIDITY_TOOLTIP = "Represents a humidity sensor.";  // untranslated
Blockly.Msg.IF_TOOLTIP = "Checks the condition in »if«. If the condition is true, executes the »do« action.";  // untranslated
=======
=======
Blockly.Msg.HUMIDITY = "humidity";  // untranslated
<<<<<<< HEAD
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.IF_TOOLTIP = "vérifie la condition SI. Si elle est vraie, execute l'action";
>>>>>>> #745 added base Uno files, configuration draft
=======
Blockly.Msg.IF_TOOLTIP = "Checks the condition in »if«. If the condition is true, executes the »do« action.";  // untranslated
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.IMAGE_GET_TOOLTIP = "Returns the chosen image.";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "angry";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "asleep";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "butterfly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "chessboard";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "confused";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "cow";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "small diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "duck";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "fabulous";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "ghost";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "giraffe";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "small heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "house";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "meh!";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "music crotchet";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "music quaver";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "music quavers";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "no";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "pacman";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "pitchfork";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "rabbit";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "rollerskate";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "sad";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "silly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "skull";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "smile";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "snake";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "small square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "stickfigure";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "sword";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "target";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "tortoise";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "triangle";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "triangle left";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "T-shirt";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "umbrella";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "xmas";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "yes";  // untranslated
Blockly.Msg.IMAGE_INVERT = "invert";  // untranslated
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Inverts the image. Each pixel with value 0 or none will be set to # or 9 and pixels with value # or 9 will be set to 0 or none.";  // untranslated
Blockly.Msg.IMAGE_SHIFT = "shift";  // untranslated
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Shifts the image in the given direction by the given number";  // untranslated
Blockly.Msg.IMAGE_TOOLTIP = "Creates an image for the display. You can specify the brightness of each pixel from 0 to 9 or # where 0 means no light, 1 is a bit bright and 9 or # is the brightest value.";  // untranslated
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Document your program here ...";  // untranslated
Blockly.Msg.INFO_TAGS = "Tags";  // untranslated
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gets the current relative distance from the infrared sensor. The values are between 1 and 75 cm.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "donne la valeur actuelle du capteur infrarouge";
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Returns an array of measurements for the presence of a beacon.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "bloc pour le capteur infrarouge";
Blockly.Msg.INLINE_INPUTS = "Entrées en ligne";
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INTERNAL_PORT = "internal";  // untranslated
<<<<<<< HEAD
Blockly.Msg.IRSEEKER_TOOLTIP = "Represents a HiTechnic NXT IRSeeker V2 sensor.";  // untranslated
=======
Blockly.Msg.IRSEEKER_TOOLTIP = "Represents a HighTechnic NXT IRSeeker V2 sensor.";  // untranslated
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Gets the current reading of one of the axises of the joystick";  // untranslated
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "bouton enfoncé?";
<<<<<<< HEAD
<<<<<<< HEAD
Blockly.Msg.KEY_TOOLTIP = "Represents a button.";  // untranslated
<<<<<<< HEAD
Blockly.Msg.LANGUAGE = "language";  // untranslated
=======
=======
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.LANGUAGE_DANISH = "Danish";  // untranslated
Blockly.Msg.LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.LANGUAGE_FINNISH = "Finnish";  // untranslated
Blockly.Msg.LANGUAGE_FRENCH = "French";  // untranslated
Blockly.Msg.LANGUAGE_GERMAN = "German";  // untranslated
Blockly.Msg.LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.LANGUAGE_ITALIAN = "Italian";  // untranslated
Blockly.Msg.LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.LANGUAGE_NORWEGIAN = "Norwegian";  // untranslated
Blockly.Msg.LANGUAGE_POLISH = "Polish";  // untranslated
Blockly.Msg.LANGUAGE_PORTUGUESE = "Portuguese";  // untranslated
Blockly.Msg.LANGUAGE_RUSSIAN = "Russian";  // untranslated
Blockly.Msg.LANGUAGE_SPANISH = "Spanish";  // untranslated
Blockly.Msg.LANGUAGE_SWEDISH = "Swedish";  // untranslated
Blockly.Msg.LANGUAGE_TURKISH = "Turkish";  // untranslated
<<<<<<< HEAD
Blockly.Msg.LCDI2C_TOOLTIP = "Represents an LCD I2C display.";  // untranslated
Blockly.Msg.LCD_TOOLTIP = "Represents an LCD display.";  // untranslated
=======
Blockly.Msg.LCD = "LCD";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
=======
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.LED = "LED";  // untranslated
Blockly.Msg.LEDBAR = "LED Bar";  // untranslated
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Sets the specified LED [0-9] on the Grove LED Bar v2.0 by Seeed to the given brightness [0-8]. The LED Bar has to be connected to the A1 (right) Grove connector.";  // untranslated
Blockly.Msg.LED_OFF = "turn LED off";  // untranslated
Blockly.Msg.LED_OFF_TOOLTIP = "Turns the LED off.";  // untranslated
Blockly.Msg.LED_ON = "turn LED on";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP = "Turns the LED on and changes the color.";  // untranslated
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Turns the LED on. Watch out, it's very bright!";  // untranslated
Blockly.Msg.LED_TOOLTIP = "Represents an LED.";  // untranslated
Blockly.Msg.LEFT = "left";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Represents 8 light sensors.";  // untranslated
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Récupère la valeur actuelle du capteur de lumière.";
Blockly.Msg.LIGHT_TOOLTIP = "Represents a light sensor.";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "créer une liste vide";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement";
Blockly.Msg.LISTS_CREATE_TITLE = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ajouter, supprimer, ou réordonner les sections pour reconfigurer ce bloc de liste.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "créer une liste avec";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ajouter un élément à la liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Créer une liste avec un nombre quelconque d’éléments.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "premier";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# depuis la fin";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtenir";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtenir et supprimer";
Blockly.Msg.LISTS_GET_INDEX_LAST = "dernier";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aléatoire";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "supprimer";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Supprime et renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Supprime et renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Supprime et renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Supprime le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Supprime l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Supprime l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Supprime le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Supprime un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "jusqu’à # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "jusqu’à #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jusqu’à la fin";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtenir la sous-liste depuis le début";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtenir la sous-liste depuis # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtenir la sous-liste depuis #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crée une copie de la partie spécifiée d’une liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trouver la première occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "trouver la dernière occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de l’élément dans la liste. Renvoie 0 si l'élément n'est pas trouvé.";
Blockly.Msg.LISTS_INLIST = "dans la liste";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Renvoie vrai si la liste est vide.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Renvoie la longueur d’une liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "créer une liste avec l’élément %1 répété %2 fois";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crée une liste consistant en la valeur fournie répétée le nombre de fois indiqué.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "comme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insérer en";
Blockly.Msg.LISTS_SET_INDEX_SET = "mettre";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insère l’élément au début d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Insère l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Insère l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Ajouter l’élément à la fin d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Insère l’élément au hasard dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fixe le premier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fixe l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fixe l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fixe le dernier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fixe un élément au hasard dans une liste.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "croissant";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "décroissant";
Blockly.Msg.LISTS_SORT_TITLE = "trier %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Trier une copie d’une liste.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabétique, en ignorant la casse";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérique";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabétique";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "créer une liste depuis le texte";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "créer un texte depuis la liste";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Réunir une liste de textes en un seul, en les séparant par un séparateur.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Couper un texte en une liste de textes, en coupant à chaque séparateur.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "avec le séparateur";
Blockly.Msg.LIST_BACK_TOOLTIP = "Back to previous view.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faux";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Renvoie soit vrai soit faux.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "vrai";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://fr.wikipedia.org/wiki/Inegalite_(mathematiques)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Renvoyer vrai si les deux entrées sont égales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Renvoyer vrai si la première entrée est plus grande que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Renvoyer vrai si la première entrée est plus grande ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Renvoyer vrai si la première entrée est plus petite que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Renvoyer vrai si la première entrée est plus petite ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Renvoyer vrai si les deux entrées sont différentes.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "pas %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Renvoie vrai si l’entrée est fausse. Renvoie faux si l’entrée est vraie.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Renvoie nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "et";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ou";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Renvoyer vrai si les deux entrées sont vraies.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Renvoyer vrai si au moins une des entrées est vraie.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si faux";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si vrai";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Vérifier la condition dans 'test'. Si elle est vraie, renvoie la valeur 'si vrai' ; sinon renvoie la valeur 'si faux'.";
Blockly.Msg.LOOP = "repeat until";  // untranslated
Blockly.Msg.LOOPFOREVER_TOOLTIP = "répéter indéfiniment l'action";
Blockly.Msg.LOOP_FOREVER = "répéter indéfiniment";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://fr.wikipedia.org/wiki/Arithmetique";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Renvoie la somme des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Renvoie le quotient des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Renvoie la différence des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Renvoie le produit des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Renvoie le premier nombre élevé à la puissance du second.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "incrémenter %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Ajouter un nombre à la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Renvoie une des constantes courantes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infini).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contraindre %1 entre %2 et %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Contraindre un nombre à être entre les limites spécifiées (incluses).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "est divisible par";
Blockly.Msg.MATH_IS_EVEN = "est pair";
Blockly.Msg.MATH_IS_NEGATIVE = "est négatif";
Blockly.Msg.MATH_IS_ODD = "est impair";
Blockly.Msg.MATH_IS_POSITIVE = "est positif";
Blockly.Msg.MATH_IS_PRIME = "est premier";
Blockly.Msg.MATH_IS_TOOLTIP = "Vérifier si un nombre est pair, impair, premier, entier, positif, négatif, ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.";
Blockly.Msg.MATH_IS_WHOLE = "est entier";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "reste de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Renvoyer le reste de la division euclidienne des deux nombres.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://fr.wikipedia.org/wiki/Nombre";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nombre.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "moyenne de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "médiane de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majoritaires de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "élément aléatoire de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "écart-type de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "somme de la liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Renvoyer la moyenne (arithmétique) des valeurs numériques dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Renvoyer le plus grand nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Renvoyer le nombre médian de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Renvoyer le plus petit nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Renvoyer une liste des élément(s) le(s) plus courant(s) dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Renvoyer un élément dans la liste au hasard.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Renvoyer l’écart-type de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Renvoyer la somme de tous les nombres dans la liste.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraction aléatoire";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Renvoyer une fraction aléatoire entre 0.0 (inclus) et 1.0 (exclus).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entier aléatoire entre %1 et %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Renvoyer un entier aléatoire entre les deux limites spécifiées, incluses.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrondir";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrondir par défaut";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrondir par excès";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrondir un nombre au-dessus ou au-dessous.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://fr.wikipedia.org/wiki/Racine_carree";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "valeur absolue";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "racine carrée";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Renvoie la valeur absolue d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Renvoie e à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Renvoie le logarithme naturel d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Renvoie le logarithme base 10 d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Renvoie l’opposé d’un nombre";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Renvoie 10 à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Renvoie la racine carrée d’un nombre.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Renvoie l’arccosinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Renvoie l’arcsinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Renvoie l’arctangente d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Renvoie le cosinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Renvoie le sinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Renvoie la tangente d’un angle en degrés (pas en radians).";
Blockly.Msg.ME = "Moi";
Blockly.Msg.MENU_ABOUT = "via";
Blockly.Msg.MENU_ABOUT_PROJECT = "about the Open Roberta Project";  // untranslated
Blockly.Msg.MENU_ATTACH = "attacher";
Blockly.Msg.MENU_BEGINNER = "débutant";
Blockly.Msg.MENU_CHANGE = "modifier";
Blockly.Msg.MENU_CHECK = "vérifier";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Download the source code of your program on the computer";  // untranslated
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Refresh the source code, if you have changed the NEPO Blocks.";  // untranslated
Blockly.Msg.MENU_CONNECT = "lier";
Blockly.Msg.MENU_CREATE_LINK = "create program link ...";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "effecer l'utilisateur";
Blockly.Msg.MENU_EDIT = "modifier";
Blockly.Msg.MENU_EDIT_TOOLTIP = "modifier";
Blockly.Msg.MENU_EV3 = "Robot preparation";  // untranslated
Blockly.Msg.MENU_EXPERT = "expert";
Blockly.Msg.MENU_EXPORT_PROG = "programmes exportés";
Blockly.Msg.MENU_FAQ = "questions fréquentes";
Blockly.Msg.MENU_GALLERY = "gallery";  // untranslated
Blockly.Msg.MENU_GALLERY_TOOLTIP = "gallery";  // untranslated
Blockly.Msg.MENU_GENERAL = "aide générale";
Blockly.Msg.MENU_HELP = "aide";
Blockly.Msg.MENU_HELP_TOOLTIP = "aide";
Blockly.Msg.MENU_IMPORT_PROG = "programmes importés";
Blockly.Msg.MENU_LANGUAGE = "langue";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "langue";
Blockly.Msg.MENU_LIST = "list ...";  // untranslated
Blockly.Msg.MENU_LIST_CONF = "mes configurations...";
Blockly.Msg.MENU_LIST_PROG = "mes programmes...";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "exemple de programmes";
Blockly.Msg.MENU_LOGGING = "logging";
Blockly.Msg.MENU_LOG_IN = "connexion";
Blockly.Msg.MENU_LOG_OUT = "log out";
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Ton programme a été téléchargé";
Blockly.Msg.MENU_NEW = "nouveu ...";
Blockly.Msg.MENU_PROGRAMMING = "programming with NEPO";  // untranslated
Blockly.Msg.MENU_PROPERTIES = "Propriétés";
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Open/close the source code view.";  // untranslated
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Open/close the help view.";  // untranslated
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Open/close the program documentation view.";  // untranslated
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Open/close the simulation view.";  // untranslated
Blockly.Msg.MENU_ROBOT = "robot";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "info";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "Info robot";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Press <span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span> buttons on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Press <span class='typcn typcn-media-cancel'></span> button on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "robots";
Blockly.Msg.MENU_SAVE = "sauvegarder";
Blockly.Msg.MENU_SAVE_AS = "sauvegarder sous...";
Blockly.Msg.MENU_SHOW_AGAIN = "Montre l'info de démarrage";
Blockly.Msg.MENU_SHOW_CODE = "code source";
Blockly.Msg.MENU_SIM_BACK = "retour";
Blockly.Msg.MENU_SIM_DRAW = "dessiner Parcours";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Upload your own simulation background image, it will be appended at the end of the background's list.";  // untranslated
Blockly.Msg.MENU_SIM_MATH = "coordonnées du parcours";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Move the robot back to it's initial position.";  // untranslated
Blockly.Msg.MENU_SIM_RESCUE = "Parcours Rescue";
Blockly.Msg.MENU_SIM_ROBERTA = "Parcours Roberta";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "open/close the robot's view";  // untranslated
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "change the scene";  // untranslated
Blockly.Msg.MENU_SIM_SIMPLE = "Parcours facile";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Start your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_STOP = "stop";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Stop your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Open/close the sensors' data view.";  // untranslated
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad scene";  // untranslated
Blockly.Msg.MENU_START_BRICK = "démarre sur le robot";
Blockly.Msg.MENU_START_SIM = "démarre dans la simulation";
Blockly.Msg.MENU_STATE_INFO = "info détaillé";
Blockly.Msg.MENU_TOOLBOX = "blocs NEPO";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "blocs NEPO pour débutant";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "blocs NEPO pour expert";
Blockly.Msg.MENU_USER = "connexion";
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "info utilisateur";
Blockly.Msg.MENU_USER_TOOLTIP = "utilisateur";
Blockly.Msg.MENU_ZOOM = "zoomer";
Blockly.Msg.MENU_ZOOM_IN = "agrandir";
Blockly.Msg.MENU_ZOOM_OUT = "réduire";
Blockly.Msg.MENU_ZOOM_RESET = "initialiser";
Blockly.Msg.MESSAGE_ADDED_USER = "User »$« was added";  // untranslated
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Tu as effacé la configuration $ du robot";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Vérification de ton programme !";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Ta configuration $ a été sauvegardée !";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Ta configuration a été sauvegardée sous le nom '$' !";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Your group has been created";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Ton programme $ a été sauvegardé !";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Ton programme a été sauvegardé sous le nom '$' !";
Blockly.Msg.MESSAGE_EDIT_START = "Ton programme $ va démarrer sur le robot !";
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Incomptabilité entre le firmware de Open Roberta Lab et celui de ton robot. Envoi nous s'il te plaît un email !";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Group »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers. The default name »[robot]basis« can't be used here.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Utilise uniquement des lettres et des chiffres et commance TOUJOURS par une letrre. Réessaie de nouveau !";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Cette fonction n'existe pas encore, désolé !";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Tu as effacé ton programme '$'.";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Connecte de nouveau ton robot avec Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Ton robot $ est maintenant connecté.";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "An active robot was disconnected";  // untranslated
Blockly.Msg.MESSAGE_USER_DELETED = "Tu as effacé ton compte d'utilisateur. Nous espérons que tu reviennes bientôt !";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "User »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGIN = "Salut '$' !";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Tu n'es plus connecté !";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "mode";
Blockly.Msg.MODE_ACCELERATION = "acceleration";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "lumière ambiante";
Blockly.Msg.MODE_ANALOG = "analog";  // untranslated
Blockly.Msg.MODE_ANGLE = "angle";
Blockly.Msg.MODE_CLOSE = "close";  // untranslated
Blockly.Msg.MODE_COLOUR = "couleur";
Blockly.Msg.MODE_COMPASS = "compass";  // untranslated
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DEGREE = "degré";
Blockly.Msg.MODE_DIGITAL = "digital";  // untranslated
Blockly.Msg.MODE_DISTANCE = "distance";
Blockly.Msg.MODE_HUMIDITY = "humidity";  // untranslated
Blockly.Msg.MODE_IDALL = "IDs (list)";  // untranslated
Blockly.Msg.MODE_IDONE = "ID";  // untranslated
Blockly.Msg.MODE_INFO = "information";  // untranslated
Blockly.Msg.MODE_LIGHT = "lumière";
Blockly.Msg.MODE_MODULATED = "modulated";  // untranslated
<<<<<<< HEAD
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
=======
<<<<<<< HEAD
=======
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
<<<<<<< HEAD
Blockly.Msg.MODE_NAMEALL = "names (list)";  // untranslated
Blockly.Msg.MODE_NAMEONE = "name";  // untranslated
=======
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.MODE_OBSTACLE = "obstacle";  // untranslated
Blockly.Msg.MODE_OPEN = "open";  // untranslated
Blockly.Msg.MODE_ORIENTATION = "orientation";  // untranslated
Blockly.Msg.MODE_PRESENCE = "présence";
Blockly.Msg.MODE_PRESSED = "pressed";  // untranslated
Blockly.Msg.MODE_PULSE_HIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSE_LOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "rotation";
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "nombre de rotation";
Blockly.Msg.MODE_SERIAL = "card serial";  // untranslated
Blockly.Msg.MODE_SOUND = "son";
Blockly.Msg.MODE_TEMPERATURE = "temperature";  // untranslated
Blockly.Msg.MODE_UNMODULATED = "unmodulated";  // untranslated
Blockly.Msg.MODE_VALUE = "value";  // untranslated
<<<<<<< HEAD
Blockly.Msg.MODE_WORD = "word";  // untranslated
=======
<<<<<<< HEAD
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.MOISTURE_TOOLTIP = "Represents a moisture sensor.";  // untranslated
Blockly.Msg.MOTION_TOOLTIP = "Represents a motion sensor.";  // untranslated
=======
Blockly.Msg.MOTION_SENSOR = "motion sensor";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.MOTOR = "moteur";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "démarre le robot en utilisant une vitesse quelconque et fait en sorte qu'il s'arrête après une certaine distance";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "démarre le robot en utilisant une vitesse quelconque";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "stop le robot";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "fait tourner le robot en fonction du degré";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "fait tourner le robot";
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Represents a Bot'n Roll chassis motor.";  // untranslated
Blockly.Msg.MOTOR_BACKWARD = "en reculant";
Blockly.Msg.MOTOR_BIG = "grand";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "bloc pour le grand moteur";
Blockly.Msg.MOTOR_BRAKE = "freiner";
Blockly.Msg.MOTOR_DEGREE = "degré";
Blockly.Msg.MOTOR_DISTANCE = "distance en cm";
Blockly.Msg.MOTOR_DRIVE = "roule";
Blockly.Msg.MOTOR_FLOAT = "roue libre";
Blockly.Msg.MOTOR_FOREWARD = "en avançant";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "donne la puissance actuelle de ce moteur";
Blockly.Msg.MOTOR_LEFT = "gauche";
Blockly.Msg.MOTOR_MIDDLE = "moyen";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "bloc pour le moyen moteur";
Blockly.Msg.MOTOR_NONE = "aucun";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "démarre le moteur et l'arrête après le nombre de rotation (ou le nombre de degré)";
Blockly.Msg.MOTOR_ON_TOOLTIP = "démarre le moteur avec une certaine puissance";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Turns motor A, B or A+B on with a specific power.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "autre consommateur d'énergie";
Blockly.Msg.MOTOR_PAN = "pan";  // untranslated
Blockly.Msg.MOTOR_PORT = "port moteur";
Blockly.Msg.MOTOR_REGULATION = "paramétrage";
Blockly.Msg.MOTOR_RIGHT = "droite";
Blockly.Msg.MOTOR_ROTATION = "rotation";
Blockly.Msg.MOTOR_ROTATION_REVERSE = "sens de rotation";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "régler la puissance du moteur";
Blockly.Msg.MOTOR_SIDE = "page";
Blockly.Msg.MOTOR_SPEED = "vitesse";
Blockly.Msg.MOTOR_SPEED_0 = "Motor Speed is 0!";  // untranslated
Blockly.Msg.MOTOR_STEER = "direction du moteur";
Blockly.Msg.MOTOR_STOP = "stop";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "stop ce moteur";
Blockly.Msg.MOTOR_TILT = "tilt";  // untranslated
Blockly.Msg.MOTOR_TURN = "tourne";
Blockly.Msg.NAO_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";  // untranslated
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation. TaiChi is a complex and artistic set of moves. Blink will only make the robot blink by using its LEDs. The wink and wipe forehead animation can be performed while siting and standing.";  // untranslated
Blockly.Msg.NAO_ANSWER = "answer";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE = "let NAO";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot will take the selected posture or position. Use the dropdown menu to choose one.";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS = "turn autonomous behaviour";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Turn the robots autonomous behaviour on or off. While 'on' the robot will react to sounds, move slightly from side to side and try to track faces. Turn it off if this behaviour interrupts your program.";  // untranslated
Blockly.Msg.NAO_BLINK = "blink";  // untranslated
Blockly.Msg.NAO_CAMERA = "camera";  // untranslated
Blockly.Msg.NAO_CAMERA_BOTTOM = "bottom";  // untranslated
Blockly.Msg.NAO_CAMERA_TOP = "top";  // untranslated
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "Returns additional information about the given detected in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_FILENAME = "filename";  // untranslated
Blockly.Msg.NAO_FORGETFACEOF = "forget face of";  // untranslated
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Delete a face previously saved under a given name from the vision recognition database on the robot. ";  // untranslated
Blockly.Msg.NAO_FRAME = "frame";  // untranslated
Blockly.Msg.NAO_FRAME_TORSO = "torso";  // untranslated
Blockly.Msg.NAO_FRAME_WORLD = "world";  // untranslated
Blockly.Msg.NAO_FSR = "force sensitive resistor";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get current volume.";  // untranslated
Blockly.Msg.NAO_GYROMETER = "gyrometer";  // untranslated
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";  // untranslated
Blockly.Msg.NAO_HAND = "hand";  // untranslated
Blockly.Msg.NAO_HAND_TOOLTIP = "Open or close a single hand (wrist) of the robot.";  // untranslated
Blockly.Msg.NAO_HEADSENSOR = "head sensor";  // untranslated
Blockly.Msg.NAO_INTENSITY = "intensity";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HAND = "hand";  // untranslated
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";  // untranslated
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";  // untranslated
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";  // untranslated
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";  // untranslated
Blockly.Msg.NAO_LEARNFACEOF = "learn face of";  // untranslated
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name in the vision recognition database on the robot.";  // untranslated
Blockly.Msg.NAO_LED = "LED";  // untranslated
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the selected LED(s) off.";  // untranslated
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "all";  // untranslated
Blockly.Msg.NAO_LED_CHEST = "chest";  // untranslated
Blockly.Msg.NAO_LED_EAR = "ear";  // untranslated
Blockly.Msg.NAO_LED_EARS = "ears";  // untranslated
Blockly.Msg.NAO_LED_EYE = "eye";  // untranslated
Blockly.Msg.NAO_LED_EYES = "eyes";  // untranslated
Blockly.Msg.NAO_LED_FOOT = "foot";  // untranslated
Blockly.Msg.NAO_LED_HEAD = "head";  // untranslated
Blockly.Msg.NAO_LED_TOOLTIP = "Set the color of selected LED(s). Eyes and feet LEDs are available.";  // untranslated
Blockly.Msg.NAO_LOOKAT = "look at";  // untranslated
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "Returns additional information about the given NAO mark in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_MOVE = "move";  // untranslated
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "arm";  // untranslated
Blockly.Msg.NAO_PART_ARMS = "arms";  // untranslated
Blockly.Msg.NAO_PART_BODY = "body";  // untranslated
Blockly.Msg.NAO_PART_HEAD = "head";  // untranslated
Blockly.Msg.NAO_PART_LEG = "leg";  // untranslated
Blockly.Msg.NAO_PART_LEGS = "legs";  // untranslated
Blockly.Msg.NAO_PERFORM = "perform";  // untranslated
Blockly.Msg.NAO_PHRASE = "phrase";  // untranslated
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "play file";  // untranslated
Blockly.Msg.NAO_POINTAT = "point at";  // untranslated
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "crouch";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBACK = "lie back";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "lie belly";  // untranslated
Blockly.Msg.NAO_POSTURE_REST = "rest";  // untranslated
Blockly.Msg.NAO_POSTURE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "sit relaxed";  // untranslated
Blockly.Msg.NAO_POSTURE_STAND = "stand";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDINIT = "stand init";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDZERO = "stand zero";  // untranslated
Blockly.Msg.NAO_QQVGA = "160*120";  // untranslated
Blockly.Msg.NAO_QVGA = "320*240";  // untranslated
Blockly.Msg.NAO_RANDOMEYES = "random eyes";  // untranslated
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RASTA = "rasta";  // untranslated
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD = "speech recognizer of";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Returns a word from the given list when recognized by NAO";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO = "record video";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot. Access the robots file system to view the video.";  // untranslated
Blockly.Msg.NAO_RELATIVE = "relative";  // untranslated
Blockly.Msg.NAO_RESOLUTION = "resolution";  // untranslated
<<<<<<< HEAD
<<<<<<< HEAD
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of selected LED(s) in a range from 0 to 100. Ears, head and chest LEDs are available";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "lock motors";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot will be turned on or off. Be aware that releasing the leg motors while the robot is standing may result in robot collapsing.";  // untranslated
=======
Blockly.Msg.NAO_SAY = "say";  // untranslated
Blockly.Msg.NAO_SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 50-400) and the shape of the voice (range: 50-200) with the input fields";  // untranslated
=======
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of a group of LEDs in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "stiffness of";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot is turned on or off. Be aware that releasing the leg motors while the robot is standing may result in downfall.";  // untranslated
>>>>>>> #745 added base Uno files, configuration draft
Blockly.Msg.NAO_STOP = "stop movement";  // untranslated
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "tai chi";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE = "take picture";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";  // untranslated
Blockly.Msg.NAO_WALK = "walk";  // untranslated
Blockly.Msg.NAO_WALKTO = "walk to";  // untranslated
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";  // untranslated
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Makes the robot walk infinitely";  // untranslated
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance entered in cm. Distances below 10cm might lead to no movement at all. Depending on your robot and the surface the robots is walking on the distance might not be exact.";  // untranslated
Blockly.Msg.NAO_WAVE = "wave";  // untranslated
Blockly.Msg.NAO_WIPE_FOREHEAD = "wipe forehead";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Nouvelle variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nouveau nom de la variable :";
Blockly.Msg.NO = "non";
Blockly.Msg.NXTBRICK_TOOLTIP = "brique NXT.";
Blockly.Msg.OFF = "éteindre";
Blockly.Msg.OLDER_THEN_14 = "I am 16 or older than 16!";  // untranslated
Blockly.Msg.ON = "allumer";
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Your are not allowed to share. Please activate your account! <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.ORA_COMMAND_INVALID = "Le nom existe déjà. Choisi un autre nom et réessaie !";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "Le serveur n'a pas trouvé la configuration du robot.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Le transfer de la configuration du robot vers le language de programmation a échoué.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Le programm n'a pas pu être traduit en language machine.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "La génération du programm a échouée.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Le programm n'a pas pu être trouvé dans la base de données.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Erreur d'enregistrement du programm.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Le programm n'a pas pu être transféré vers le language de programmation.";
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Erreur lors de la suppression de la configuration du robot. Réessaie !";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Tu as effacé la configuration $ du robot.";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Le nom de la configuration du robot n'est pas valide.";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "La configuration du robot est prête.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "La configuration du robot  n'a pas pu être trouvée dans la base de données.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "La configuration $ est prête.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Erreur d'enregistrement de la configuration du robot.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "La configuration $ du robot a été enrégistrée !";
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Your program »$« couldn't be uploaded to the gallery, it seems as if it is already uploaded.";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Your program »$« is now in the gallery!";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "This group already exists";  // untranslated
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "You do not like program »$« anymore!";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "You couldn't like program »$«. Maybe you have already liked it.";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "You like program »$« now!";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Cet utilisateur n'existe pas!";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Program is not compatible with the configuration";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Erreur lors de la suppression du programm, réessaie !";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Tu as effacé le programm $ .";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Le nom du programm existe déjà. Choisi un autre et réessaie !";
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Les programmes sont prêts.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Le programm n'a pas pu être trouvé dans la base de données.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Tu n'es pas connecté. Réessaie avec ton utilisateur et mot de passe ou crée ton compte.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Programme téléchargé";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "$.xml n'est pas un programme compatible NEPO et ne peut pas être téléchargé";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "You are trying to import a program for a robot of a different type as selected in the menu. <br> Please switch the robot type in the robot's menu and try to import again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "There are errors in your program. Please check the messages";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Le programme existe déjà.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "Tu n'as pas les droits nécessaires pour modifier le programme.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Ton programme a été modifié récemment. Tu dois enregistrer tes modification dans un nouveau programme >enregistrer sous<";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Le programme est introuvable, la mise à jour est impossible.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Le programme $ est enregistré.";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Le partage du programme $ n'est pas possible. Il n'existe pas.";
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "It seems that we do not support the desired robot system!<br>Please choose another one.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Erreur lors du mise à jour du nouveau system pour ton robot.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Le robot est mise à jour avec la toute dernière version.";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Le robot n'est pas connecté au serveur. Regarde, si le robot est allumé, puis connecte le au serveur avec le mot de passe sous - connexion serveur.<br/> Si cela ne fonctionne pas, regarde dans l'aide.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Le robot est actuellement inactif.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Envoi du programme en cours, le robot va démarrer.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_CALLIOPE2016 = "Your program »$« is downloaded to Calliope, press the reset button to start it!";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN_NXT = "Your program »$« is downloaded to the NXT, start it on the robot!";  // untranslated
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Switched to robot system »$«!";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Erreur du serveur";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "As-tu allumé on robot et connecté au serveur?<br/> Si cela ne fonctionne pas, regarde l'aide.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "You are trying to connect a robot of a different type as selected in the menu. <br> Please switch the robot type in the robot's menu and try to connect again!";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Très bien! Ton robot $ est connecté au serveur.";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "An error has occurred while deleting the toolbox, please try it again!";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Toolbox deleted";  // untranslated
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Le nom de la palette n'est pas valide.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Ta palette na pas pu être trouvée ans la base de données.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "La palette est prête !";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "erreur de sauvegarde de la palette.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Toolbox saved";  // untranslated
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "The link is not valid anymore. Please ask for resending your verification mail again";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »roberta-zentrale@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Your account is successfully verified! Please login!";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Your account name or your user name is to long. Please make sure that they are not longer then 25 digits. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "You are using some one or more special characters in your account name! Please remove them. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Vérifie si toutes les cases ont été remplies.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Erreur de sauvegarde; l'utilisateur existe déjà ou réesaie !";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "L'utilisateur a été créé !";
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Your account is currently not verified, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Erreur lors de la suppression de l'utilisateur $.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Erreur de suppression de l'utilisateur $ de la base de données.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Tu as supprimé ton compte d'utilisateur. Nous espérons que tu reviendras bientôt !";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "L'adresse mail inconnue. Vérifie son écriture.";
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "There is already an account with this email address registered. Please enter another email address!";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Ton compte d'utilisateur a été chargé.";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Erreur d'inscription. L'utilisateur et le mot de passe, sont-ils corrects? <br /> Réessaie !";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Login correct !";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "This user already belongs to the group";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "The link is not valid anymore. Please ask for resetting your password again, if you still cannot remember it!";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »roberta-zentrale@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "User was not found";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "L'utilisateur pour le partage de ton programme n'existe pas. L'as-tu écrit correctement?<br /> Réessaie !";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Tu ne peux pas partager les programmes avec toi-même.";
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Your password has been successfully changed!";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_PULL = "pull";  // untranslated
Blockly.Msg.PIN_PULL_DOWN = "down";  // untranslated
Blockly.Msg.PIN_PULL_NONE = "none";  // untranslated
Blockly.Msg.PIN_PULL_UP = "up";  // untranslated
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Sets the pull of the chosen pin";  // untranslated
Blockly.Msg.PIN_WRITE = "write";  // untranslated
Blockly.Msg.PITCH = "pitch";  // untranslated
Blockly.Msg.PLAY = "joue le son";
Blockly.Msg.PLAY_DURATION = "durée";
Blockly.Msg.PLAY_EIGHTH = "eighth note";  // untranslated
Blockly.Msg.PLAY_FILE = "son";
Blockly.Msg.PLAY_FILE_TOOLTIP = "joue un fichier son.";
Blockly.Msg.PLAY_FREQUENZ = "fréquence";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Donne le volume.";
Blockly.Msg.PLAY_HALF = "half note";  // untranslated
Blockly.Msg.PLAY_NOTE = "note";  // untranslated
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Plays a music note";  // untranslated
Blockly.Msg.PLAY_QUARTER = "quarter note";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "régler le volume.";
Blockly.Msg.PLAY_SIXTEENTH = "sixteenth note";  // untranslated
Blockly.Msg.PLAY_TONE = "tone";  // untranslated
Blockly.Msg.PLAY_TONE_TOOLTIP = "joue une note";
Blockly.Msg.PLAY_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "volume";
Blockly.Msg.PLAY_WHOLE = "whole note";  // untranslated
Blockly.Msg.POPUP_ABOUT_JOIN = "je souhaite aider";
Blockly.Msg.POPUP_ABOUT_TEXT = "Open Roberta Lab est un environnement de programmation online pour les jeunes qui permet de façon simplifiée et sans obstacles techniques la programmation d'un robot. <br /> L'environnement de programmation est complètement »open source«, Vous pouvez l'améliorer!  Les Open-Source-developpertools sont à votre disposition sur le serveur Fraunhofer";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Open Roberta Lab a été développé par Fraunhofer-Instituts IAIS dans le cadre de l'iInitiative  <a href='http://www.roberta-home.de/'>»Roberta – apprendre grâce aux robots«</a>";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta a été créé en coopération avec Google Deutschland afin de permettre un approche simple de la programmation pour les élèves et les professeurs. Open Roberta a été financé par Google.org (2014 - 2015) à hauteur de 1Mio Euro. </a>";
Blockly.Msg.POPUP_AGE = "Age";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "attention";
Blockly.Msg.POPUP_BEFOREUNLOAD = "Il faut enregistrer ta configuration et t'inscrire avant pouvoir quitter cette page. Sinon tu vas perdre tout ton travail !";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "Il faut enregistrer ta configuration avant pouvoir quitter cette page. Sinon tu vas perdre tout ton travail !";
Blockly.Msg.POPUP_CANCEL = "annuler";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "changer le mot de passe";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Press »OK« to discard your work. Press »Cancel« to stay here and save your work first.</i>";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Veux-tu vraiment supprimer ta configuration du robot ?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Do you really want to delete these groups?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Veux-tu vraiment supprimer ton programme ?";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Do you really want to remove these users below from the current group?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Le firmware du robot a changé. il se peut que tes programmes fonctionnent encore, mais nous te conseillons de le mettre à jour. Clique sur >> actualiser <<";
Blockly.Msg.POPUP_CONTINUE = "continue anyway";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I've changed the download folder of my browser permanently. Don't show this popup again and download my programs directly.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_SAVE = "Save";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_SAVE_AS = "Save link as ...";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_A = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_B = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_C = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_D = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "actualiser";
Blockly.Msg.POPUP_EMAIL = "e-mail";
Blockly.Msg.POPUP_EMAIL_SEND = "Envoyer maintenant";
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don't change it, it probably won't work anymore. It's already copied to your clipboard!</br>$";  // untranslated
Blockly.Msg.POPUP_NAME = "Nom";
Blockly.Msg.POPUP_NEW_PASSWORD = "nouveau mot de passe";
Blockly.Msg.POPUP_OLD_PASSWORD = "Ancien mot de passe";
Blockly.Msg.POPUP_PASSWORD = "Mot de passe";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "réinitialiser le mot de passe";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Le programme n'a pas pu s'exécuter sur le robot.";
Blockly.Msg.POPUP_REGISTER_USER = "Inscris-toi maintenant";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Répéter le mot de passe";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Charge de la batterie";
Blockly.Msg.POPUP_ROBOT_NAME = "nom";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Le robot n'est actuellement pas connecté au serveur. Regarde s'il est allumé puis connecte le de nouveau au serveur et donne le mot de passe dans la case - connexion <br />Si cela ne fonctionne pas, regarde dans l'aide.";
Blockly.Msg.POPUP_ROBOT_STATE = "état";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "Programme est en cours d'exécution.";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "Pas de connexion avec le robot.";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "le robot attend";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "système";
Blockly.Msg.POPUP_ROBOT_WAIT = "temps d'attente";
Blockly.Msg.POPUP_STARTUP_COOKIES = "Nous utilisons les cookies pour personnaliser le contenu et les affichages et pour analyser l'utilisation du site web.";
Blockly.Msg.POPUP_STARTUP_HELP = "As-tu besoin d'aide?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Ne plus afficher cette fenêtre la prochain fois.";
Blockly.Msg.POPUP_STARTUP_START = "Choisis ton système !";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";  // untranslated
Blockly.Msg.POPUP_TOUR = "visite";
Blockly.Msg.POPUP_USERNAME = "Nom d'utilisateur";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "tu n'es pas inscrit";
Blockly.Msg.POPUP_VALUE = "valeur";
<<<<<<< HEAD
Blockly.Msg.PORT_ANKLE = "ankle";  // untranslated
=======
<<<<<<< HEAD
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.PORT_BUMPER = "bumper";  // untranslated
Blockly.Msg.PORT_ELBOW = "elbow";  // untranslated
Blockly.Msg.PORT_HAND = "hand";  // untranslated
Blockly.Msg.PORT_HEAD = "head";  // untranslated
Blockly.Msg.PORT_HIP = "hip";  // untranslated
Blockly.Msg.PORT_KNEE = "knee";  // untranslated
Blockly.Msg.PORT_SHOULDER = "schoulder";  // untranslated
Blockly.Msg.PORT_WRIST = "wrist";  // untranslated
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Represents a potentiometer .";  // untranslated
=======
Blockly.Msg.POTENTIOMETER = "potentiometer";  // untranslated
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "autoriser les ordres";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://fr.wikipedia.org/wiki/Proc%C3%A9dure_%28informatique%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur et utiliser son résultat.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Créer '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Décrire cette fonction…";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faire quelque chose";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "pour";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crée une fonction sans sortie.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retour";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crée une fonction avec une sortie.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Attention : Cette fonction a des paramètres en double.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Surligner la définition de la fonction";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Attention : Ce bloc pourrait n’être utilisé que dans une définition de fonction.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nom de l’entrée :";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Ajouter une entrée à la fonction.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entrées";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Ajouter, supprimer, ou réarranger les entrées de cette fonction.";
Blockly.Msg.PROCEDURES_TITLE = "fonction";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Erreur de variable";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Erreur dans la boucle: problème avec la variable";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Click here to delete your program.";  // untranslated
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Click here to share your program with a friend.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Do you really want to share your program with everybody? If you are not sure please check the question and answers <a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>here</a>.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Click here to upload your program to the gallery hence share it with all other users.";  // untranslated
Blockly.Msg.PULSE = "pulse";  // untranslated
Blockly.Msg.PULSE_HIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSE_LOW = "pulse time LOW";  // untranslated
Blockly.Msg.PULSE_TOOLTIP = "Represents a pulse sensor.";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Gets the RSSI of the last package.";  // untranslated
Blockly.Msg.REDO = "Refaire";
Blockly.Msg.RELAY = "relay";  // untranslated
<<<<<<< HEAD
Blockly.Msg.RELAY_TOOLTIP = "Represents a relay.";  // untranslated
=======
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.REMOVE_COMMENT = "Supprimer un commentaire";
Blockly.Msg.RENAME_VARIABLE = "Renommer la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renommer toutes les variables « %1 » en :";
Blockly.Msg.RESEND_ACTIVATION = "resend verification email";  // untranslated
Blockly.Msg.RETURN = "return";  // untranslated
Blockly.Msg.RFID_TOOLTIP = "Represents an RFID reader.";  // untranslated
Blockly.Msg.RGBLED_TOOLTIP = "Represents an RGB LED.";  // untranslated
Blockly.Msg.RIGHT = "right";  // untranslated
Blockly.Msg.ROLL = "roll";  // untranslated
Blockly.Msg.SAY = "say";  // untranslated
Blockly.Msg.SAY_PARAMETERS_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 0-100) and the pitch of the voice (range: 0-100) with the input fields";  // untranslated
Blockly.Msg.SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text.";  // untranslated
Blockly.Msg.SEND_DATA = "data to send";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.SENSOR_AMBIENTLIGHT = "ambientlight sensor";  // untranslated
Blockly.Msg.SENSOR_ANY = "anyplace";  // untranslated
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Returns true, if the selected part of the arm is touched, otherwise false.";  // untranslated
Blockly.Msg.SENSOR_BATTERY = "voltage en mV";
Blockly.Msg.SENSOR_BOTTOM = "bottom";  // untranslated
Blockly.Msg.SENSOR_CALIBRATE = "calibrate";  // untranslated
Blockly.Msg.SENSOR_CODE = "code pad";  // untranslated
Blockly.Msg.SENSOR_COLOUR = "capteur de couleur";
Blockly.Msg.SENSOR_COMPASS = "compass sensor";  // untranslated
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT compass sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE = "face detector";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Returns one or an array of IDs (number) of the last detected NAO Mark(s). If no marks are detected, -1 or an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.SENSOR_DROP = "drop sensor";  // untranslated
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gets the current reading from the drop sensor.";  // untranslated
Blockly.Msg.SENSOR_DROP_OFF = "drop-off sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT = "current sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "capteur de rotation";
Blockly.Msg.SENSOR_FLAME = "flame sensor";  // untranslated
Blockly.Msg.SENSOR_FSR = "force-sensing resistor";  // untranslated
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesture";  // untranslated
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "active?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face up.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Returns »true« if it is free falling.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Returns »true« if it is shaken.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Is the system in the selected state?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is upright.";  // untranslated
Blockly.Msg.SENSOR_GET = "get";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "donne la valeur";
Blockly.Msg.SENSOR_GROVE = "Grove";  // untranslated
Blockly.Msg.SENSOR_GYRO = "capteur gyroscopique";
Blockly.Msg.SENSOR_HUMIDITY = "humidity sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Gets the current reading from the humidity sensor.";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "capteur infrarouge";
Blockly.Msg.SENSOR_IRSEEKER = "HT infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gets the position of an infrared beacon.";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "is arm";  // untranslated
Blockly.Msg.SENSOR_IS_PIN = "is";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "enfoncé?";
Blockly.Msg.SENSOR_IS_TOUCHED = "touched?";  // untranslated
Blockly.Msg.SENSOR_JOYSTICK = "joystick";  // untranslated
Blockly.Msg.SENSOR_KEY = "la touche";
Blockly.Msg.SENSOR_KEY_ANY = "n'importe lequel";
Blockly.Msg.SENSOR_KEY_DOWN = "bas";
Blockly.Msg.SENSOR_KEY_ENTER = "milieu";
Blockly.Msg.SENSOR_KEY_ESCAPE = "retour";
Blockly.Msg.SENSOR_KEY_LEFT = "gauche";
Blockly.Msg.SENSOR_KEY_RIGHT = "droite";
Blockly.Msg.SENSOR_KEY_UP = "haut";
Blockly.Msg.SENSOR_LIGHT = "capteur de lumière";
Blockly.Msg.SENSOR_MIC = "microphone";  // untranslated
Blockly.Msg.SENSOR_MOISTURE = "moisture sensor";  // untranslated
<<<<<<< HEAD
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the moisture sensor.";  // untranslated
Blockly.Msg.SENSOR_MOTION = "motion sensor";  // untranslated
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Gets the current reading from the motion sensor.";  // untranslated
=======
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.SENSOR_MS_TIMER = "unité ms";
Blockly.Msg.SENSOR_PIN = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSE_HIGH_GETSAMPLE_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSE_LOW_GETSAMPLE_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER = "potentiometer";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gets the current reading from the potentiometer.";  // untranslated
Blockly.Msg.SENSOR_PRESSED = "enfoncé";
Blockly.Msg.SENSOR_PULSE = "pulse sensor";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gets the current reading from the pulse sensor.";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "radio RSSI sensor";  // untranslated
Blockly.Msg.SENSOR_RESET = "paramètre";
Blockly.Msg.SENSOR_RESET_II = "retour";
Blockly.Msg.SENSOR_RFID = "RFID reader";  // untranslated
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gets the current reading from the RFID reader.";  // untranslated
Blockly.Msg.SENSOR_RSSI = "signal strength";  // untranslated
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gets the signal strength from the last received message.";  // untranslated
Blockly.Msg.SENSOR_SONAR = "sonar";  // untranslated
Blockly.Msg.SENSOR_SOUND = "capteur de son";
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "microphone";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE = "temperature sensor";  // untranslated
Blockly.Msg.SENSOR_TIME = "temps";
Blockly.Msg.SENSOR_TIMER = "capteur temps";
Blockly.Msg.SENSOR_TOP = "top";  // untranslated
Blockly.Msg.SENSOR_TOUCH = "capteur tactil";
Blockly.Msg.SENSOR_ULTRASONIC = "capteur ultra-son";
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s²";  // untranslated
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";  // untranslated
Blockly.Msg.SENSOR_UNIT_CM = "cm";  // untranslated
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";  // untranslated
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";  // untranslated
Blockly.Msg.SENSOR_UNIT_MM = "mm";  // untranslated
Blockly.Msg.SENSOR_UNIT_MS = "ms";  // untranslated
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";  // untranslated
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";  // untranslated
Blockly.Msg.SENSOR_UNIT_VOLT = "V";  // untranslated
Blockly.Msg.SENSOR_VALUE = "value";  // untranslated
Blockly.Msg.SENSOR_WALL = "wall sensor";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "Open Roberta Lab est actuellement indisponible. /<br> Vérifie ta connexion internet et actualise la page. Si le problème persiste, merci de bien vouloir nous le signaler par mail :</br>roberta-zentrale@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
<<<<<<< HEAD
Blockly.Msg.SERVO_TOOLTIP = "Represents a servo motor.";  // untranslated
=======
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.SET = "Paramètre";
<<<<<<< HEAD
<<<<<<< HEAD
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
=======
>>>>>>> #745 added base Uno files, configuration draft
=======
Blockly.Msg.SETLANGUAGE = "set language";  // untranslated
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
>>>>>>> #756 added hardware visitor that extracts information about used configuration blocks
Blockly.Msg.SET_LED = "turn LED";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF = "Turn Side Brush Off";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Turn the side brush off.";  // untranslated
Blockly.Msg.SIDE_BRUSH_STATUS = "Side Brush";  // untranslated
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Turn on/off the side brush.";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Ce bloc n'est malheureusement pas disponible pour la simulation!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Ce capteur n'est pas prévu dans la configuration de ton robot. Vérifie s'il te plaît!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "Confusion entre capteur infrarouge et ultra-son. Vérifie s'il te plaït !";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "Mauvais port du capteur ! Vérifie s'il te plaît !";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Turns the single motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.SLEEP = "sleep";  // untranslated
Blockly.Msg.SLOT_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_LEFT_PITCH = "left pitch";  // untranslated
Blockly.Msg.SLOT_LEFT_ROLL = "left roll";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW = "left yaw";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "left yaw pitch";  // untranslated
Blockly.Msg.SLOT_MIDDLE = "middle";  // untranslated
Blockly.Msg.SLOT_PITCH = "pitch";  // untranslated
Blockly.Msg.SLOT_REAR = "rear";  // untranslated
Blockly.Msg.SLOT_RIGHT_PITCH = "right pitch";  // untranslated
Blockly.Msg.SLOT_RIGHT_ROLL = "right roll";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW = "right yaw";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "right yaw pitch";  // untranslated
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_YAW = "yaw";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Récupère la valeur actuelle du capteur de son.";
Blockly.Msg.SOUND_TOOLTIP = "Represents a sound sensor.";  // untranslated
Blockly.Msg.START = "démarrage";
Blockly.Msg.START_ACTIVITY = "activité";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "démarre une activité supplémentaire";
Blockly.Msg.START_PROGRAM = "démarrage du programme";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "autonomous behaviour";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "affiche les données du capteur";
Blockly.Msg.START_TOOLTIP = "Bloc de démarrage du programme principal";
<<<<<<< HEAD
Blockly.Msg.STEPMOTOR_TOOLTIP = "Represents a step motor.";  // untranslated
=======
>>>>>>> #756 added base Uno files, main configuration block, most of the sensor/actor configuration blocks
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STRENGTH = "strength";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "configuration du robot";
Blockly.Msg.TAB_PROGRAM = "programme";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperatur sensor.";  // untranslated
Blockly.Msg.TEMPERATURE_TOOLTIP = "Represents a temperature sensor.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ajouter le texte";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "à";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Ajouter du texte à la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minuscules";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Majuscule Au Début De Chaque Mot";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAJUSCULES";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Renvoyer une copie du texte dans une autre casse.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtenir la première lettre";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtenir la lettre # depuis la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtenir la lettre #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_CHARAT_LAST = "obtenir la dernière lettre";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtenir une lettre au hasard";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Renvoie la lettre à la position indiquée.";
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Write a comment to your code here, to make it easier for you and others to read and understand your code. It will also generate an inline comment in the generated source code";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Ajouter un élément au texte.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "joindre";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Ajouter, supprimer, ou réordonner des sections pour reconfigurer ce bloc de texte.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "jusqu’à la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "jusqu’à la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "jusqu’à la dernière lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dans le texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtenir la sous-chaîne depuis la première lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtenir la sous-chaîne depuis la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtenir la sous-chaîne depuis la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Renvoie une partie indiquée du texte.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trouver la première occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trouver la dernière occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de la première chaîne dans la seconde. Renvoie -1 si la chaîne n’est pas trouvée.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Renvoie vrai si le texte fourni est vide.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "créer un texte avec";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Créer un morceau de texte en agrégeant un nombre quelconque d’éléments.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Renvoie le nombre de lettres (espaces compris) dans le texte fourni.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "afficher %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afficher le texte, le nombre ou une autre valeur spécifié.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Demander un nombre à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Demander un texte à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "invite pour un nombre avec un message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "invite pour un texte avec un message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Une lettre, un mot ou une ligne de texte.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "supprimer les espaces des deux côtés";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "supprimer les espaces du côté gauche";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "supprimer les espaces du côté droit";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Renvoyer une copie du texte avec les espaces supprimés d’un bout ou des deux.";
Blockly.Msg.THETA = "theta";  // untranslated
Blockly.Msg.TIMEOUT = "timeout";  // untranslated
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "donne la valeur actuelle du capteur temps";
Blockly.Msg.TIMER_RESET_TOOLTIP = "initialise le temps";
Blockly.Msg.TODAY = "Aujourd'hui";
Blockly.Msg.TOOLBOX_ACTION = "action";
Blockly.Msg.TOOLBOX_ANIMATION = "Animation";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "couleurs";
Blockly.Msg.TOOLBOX_COMMUNICATION = "message";
Blockly.Msg.TOOLBOX_CONTROL = "contrôle";
Blockly.Msg.TOOLBOX_DECISION = "décision";
Blockly.Msg.TOOLBOX_DISPLAY = "afficher";
Blockly.Msg.TOOLBOX_DRIVE = "rouler";
Blockly.Msg.TOOLBOX_IMAGE = "Images";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "lumière";
Blockly.Msg.TOOLBOX_LIST = "liste";
Blockly.Msg.TOOLBOX_LOGIC = "logique";
Blockly.Msg.TOOLBOX_LOOP = "boucle";
Blockly.Msg.TOOLBOX_MATH = "mathématiques";
Blockly.Msg.TOOLBOX_MOVE = "mouvement";
Blockly.Msg.TOOLBOX_PIN = "Pin";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "fonctions";
Blockly.Msg.TOOLBOX_SENSOR = "capteurs";
Blockly.Msg.TOOLBOX_SOUND = "son";
Blockly.Msg.TOOLBOX_TEXT = "texte";
Blockly.Msg.TOOLBOX_VARIABLE = "variable";
Blockly.Msg.TOOLBOX_VISION = "Vision";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Attendre";
Blockly.Msg.TOOLBOX_WALK = "Walk";  // untranslated
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Le capteur tactil, est-il enfoncé?";
Blockly.Msg.TOUCH_TOOLTIP = "Bloc pour le capteur tactil.";
Blockly.Msg.TOUR1_DESCRIPTION00 = "suivant";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Salut,<br>clique sur »next« et découvre Open Roberta Lab.<br>Je vais te montrer comment tu peux programmer avec NEPO.<br>Tu peux l'abandonner à tout moment en cliquant sur »X« en haut à droite.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Le menu ;-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Ici, tu trouves tout ce dont tu as besoin pour programmer le robot!<br><span class='typcn typcn-document-text'></span> Enregistrer et ouvrir un programme<br><span class='typcn typcn-Roberta'></span> Connecte ton robot à Open Roberta Lab<br><span class='typcn typcn-lightbulb'></span> Aide<br><span class='typcn typcn-user'></span>Information sur ton compte, p. ex. login et logoff";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Clique ici et bascule vers la configuration du robot";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Tu peux adapter la configuration du robot plus tard,<br>si tu as construit un autre robot.<br>Si tu n'as pas de robot et tu veux seulement tester ton programme avec la <br>cette configuration est utilisée.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Clique ici et retourne vers l'environnement de programmation";
Blockly.Msg.TOUR1_DESCRIPTION07 = "La boîte à outils.<br>Ici tu trouves les blocs de programmation.";
Blockly.Msg.TOUR1_DESCRIPTION07a = "Once you are an experienced user you can switch here to the expert mode of the toolbox.<br>You will then find more blocks to program your robot.<br><span class='typcn typcn-media-stop-outline'></span> beginner mode<br><span class='typcn typcn-star-outline'></span> expert mode";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION08 = "Chaque programme débute avec le program-start-bloc«.<br>Les autres blocs que le robot doit exécuter, doivent être liés à ce start-bloc.<br>Fais glisser le bloc sélectionné en dessous du start bloc.";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Ici, tu trouves quelques raccourcis!<br>De la gauche vers la droitet:<br><span class='typcn typcn-media-play'></span> Clique ici pour exécuter le programme sur le robot réel<br><span class='typcn typcn-media-play-outline'></span> Clique ici pour démarrer le programme avec la simulation<br><span class='typcn typcn-cloud-storage'></span> Enregistre ton programme, mais donne lui d'abord un nom<br><span class='typcn typcn-zoom'></span> Clique ici pour agrandir les blocs<br><span class='typcn typcn-archive'></span> La poubelle! Si tu fais glisser les blocs dans la poubelle, ils seront supprimés.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attention: You cannot recover blocks once they are deleted!<br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "Clique sur »Action«";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Maintenant fais glisser le nouveau bloc en dessous du start-bloc afin qu'ils soient connectés";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Maintenant, testes ton programme avec la simulation!";
Blockly.Msg.TOUR1_DESCRIPTION13a = "and test your program in the simulation!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION15 = "Parfait, <br>ton robot a roulé 20 cm tout droit,<br>c'est ce que tu as programmé!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "Salut et amuse-toi en essayant encore plus!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Donne la valeur actuelle du capteur ultra-son.";
Blockly.Msg.ULTRASONIC_TOOLTIP = "Bloc pour le capteur ultyra-son.";
Blockly.Msg.UNDO = "Annuler";
Blockly.Msg.VACUUM_OFF = "Turn Vacuum Off";  // untranslated
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Turn the vacuum off.";  // untranslated
Blockly.Msg.VACUUM_ON = "Turn Vacuum On (%)";  // untranslated
Blockly.Msg.VACUUM_ON_TOOLTIP = "Turns on the vacuum speed in procent";  // untranslated
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Valid special characters: »=+!?.,%#+&^@_-«";  // untranslated
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Il faut remplir cette case!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "The max. lenght is 25 characters!";  // untranslated
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Le mot de passe doit contenir au moins 6 caractères!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Les deux mots de passe doivent être identiques !";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "L'identificateur a 8 caractères!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Donne une adresse mail valide s'il te plaît!";
Blockly.Msg.VALUE_TO = "value to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "élément";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Créer 'fixer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Renvoie la valeur de cette variable.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "déclare une variable globale";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "déclare une variable locale";
Blockly.Msg.VARIABLES_SET = "fixer %1 à %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Créer 'obtenir %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fixe cette variable pour qu’elle soit égale à la valeur de l’entrée.";
Blockly.Msg.VARIABLES_TITLE = "variable";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "liste des valeurs logiques";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "liste des connexions";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "List Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "liste des chiffres";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "liste des caractères";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "valeur logique";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "couleur";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "connexion";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "chiffre";
Blockly.Msg.VARIABLES_TYPE_STRING = "caractères";
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "The variable is used before declaration.";  // untranslated
Blockly.Msg.VOICE_PITCH = "voice pitch";  // untranslated
Blockly.Msg.VOICE_SPEED = "voice speed";  // untranslated
Blockly.Msg.WAIT = "attend";
Blockly.Msg.WAIT_FOR_TOOLTIP = "Il attend la valeur du capteur.";
Blockly.Msg.WAIT_OR = "ou attend jusqu'à ce que";
Blockly.Msg.WAIT_TIME_TOOLTIP = "Waits for a certain time in milliseconds.";  // untranslated
Blockly.Msg.WAIT_TOOLTIP = "Attend jusqu'à ce qu'une condition soit vraie";
Blockly.Msg.WAIT_UNTIL = "Attend jusqu'à ce que";
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Sends the value to chosen pin.";  // untranslated
Blockly.Msg.X = "x";  // untranslated
Blockly.Msg.Y = "y";  // untranslated
Blockly.Msg.YAW = "yaw";  // untranslated
Blockly.Msg.YES = "oui";
Blockly.Msg.YOUNGER_THEN_14 = "I am younger than 16!";  // untranslated
Blockly.Msg.Z = "z";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;